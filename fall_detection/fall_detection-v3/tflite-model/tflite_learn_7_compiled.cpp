/* Generated by Edge Impulse
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
// Generated on: 03.12.2023 02:02:54

#include <stdio.h>
#include <stdlib.h>
#include "edge-impulse-sdk/tensorflow/lite/c/builtin_op_data.h"
#include "edge-impulse-sdk/tensorflow/lite/c/common.h"
#include "edge-impulse-sdk/tensorflow/lite/micro/micro_mutable_op_resolver.h"
#include "edge-impulse-sdk/porting/ei_classifier_porting.h"

#if EI_CLASSIFIER_PRINT_STATE
#if defined(__cplusplus) && EI_C_LINKAGE == 1
extern "C" {
    extern void ei_printf(const char *format, ...);
}
#else
extern void ei_printf(const char *format, ...);
#endif
#endif

#if defined __GNUC__
#define ALIGN(X) __attribute__((aligned(X)))
#elif defined _MSC_VER
#define ALIGN(X) __declspec(align(X))
#elif defined __TASKING__
#define ALIGN(X) __align(X)
#elif defined __ICCARM__
#define ALIGN(x) __attribute__((aligned(x)))
#endif

#ifndef EI_MAX_SCRATCH_BUFFER_COUNT
#ifndef CONFIG_IDF_TARGET_ESP32S3
#define EI_MAX_SCRATCH_BUFFER_COUNT 4
#else
#define EI_MAX_SCRATCH_BUFFER_COUNT 4
#endif // CONFIG_IDF_TARGET_ESP32S3
#endif // EI_MAX_SCRATCH_BUFFER_COUNT

#ifndef EI_MAX_OVERFLOW_BUFFER_COUNT
#define EI_MAX_OVERFLOW_BUFFER_COUNT 10
#endif // EI_MAX_OVERFLOW_BUFFER_COUNT

using namespace tflite;
using namespace tflite::ops;
using namespace tflite::ops::micro;

namespace {

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX) || defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
constexpr int kTensorArenaSize = 2144;
#else
constexpr int kTensorArenaSize = 1120;
#endif

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX)
#pragma Bss(".tensor_arena")
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#pragma Bss()
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) __attribute__((section(".tensor_arena")));
#else
#define EI_CLASSIFIER_ALLOCATION_HEAP 1
uint8_t* tensor_arena = NULL;
#endif

static uint8_t* tensor_boundary;
static uint8_t* current_location;

template <int SZ, class T> struct TfArray {
  int sz; T elem[SZ];
};
enum used_operators_e {
  OP_FULLY_CONNECTED, OP_SOFTMAX,  OP_LAST
};
struct TensorInfo_t { // subset of TfLiteTensor used for initialization from constant memory
  TfLiteAllocationType allocation_type;
  TfLiteType type;
  void* data;
  TfLiteIntArray* dims;
  size_t bytes;
  TfLiteQuantization quantization;
};
struct NodeInfo_t { // subset of TfLiteNode used for initialization from constant memory
  struct TfLiteIntArray* inputs;
  struct TfLiteIntArray* outputs;
  void* builtin_data;
  used_operators_e used_op_index;
};

typedef struct {
  TfLiteTensor tensor;
  int16_t index;
} TfLiteTensorWithIndex;

typedef struct {
  TfLiteEvalTensor tensor;
  int16_t index;
} TfLiteEvalTensorWithIndex;

TfLiteContext ctx{};
static const int MAX_TFL_TENSOR_COUNT = 4;
static TfLiteTensorWithIndex tflTensors[MAX_TFL_TENSOR_COUNT];
static const int MAX_TFL_EVAL_COUNT = 4;
static TfLiteEvalTensorWithIndex tflEvalTensors[MAX_TFL_EVAL_COUNT];
TfLiteRegistration registrations[OP_LAST];
TfLiteNode tflNodes[4];

const TfArray<2, int> tensor_dimension0 = { 2, { 1,783 } };
const TfArray<1, float> quant0_scale = { 1, { 0.74029237031936646, } };
const TfArray<1, int> quant0_zero = { 1, { -110 } };
const TfLiteAffineQuantization quant0 = { (TfLiteFloatArray*)&quant0_scale, (TfLiteIntArray*)&quant0_zero, 0 };
const ALIGN(8) int32_t tensor_data1[2] = { 13, -13, };
const TfArray<1, int> tensor_dimension1 = { 1, { 2 } };
const TfArray<1, float> quant1_scale = { 1, { 0.0005788541748188436, } };
const TfArray<1, int> quant1_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant1 = { (TfLiteFloatArray*)&quant1_scale, (TfLiteIntArray*)&quant1_zero, 0 };
const ALIGN(16) int8_t tensor_data2[2*10] = { 
  78, -110, 64, 108, 127, -81, -37, -109, 7, 86, 
  54, 29, -19, -31, -102, 7, -113, 61, -86, 30, 
};
const TfArray<2, int> tensor_dimension2 = { 2, { 2,10 } };
const TfArray<1, float> quant2_scale = { 1, { 0.0060118329711258411, } };
const TfArray<1, int> quant2_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant2 = { (TfLiteFloatArray*)&quant2_scale, (TfLiteIntArray*)&quant2_zero, 0 };
const ALIGN(16) int32_t tensor_data3[10] = { 47, 11, -53, -19, 11, 32, 18, 7, 28, -16, };
const TfArray<1, int> tensor_dimension3 = { 1, { 10 } };
const TfArray<1, float> quant3_scale = { 1, { 0.00054490991169586778, } };
const TfArray<1, int> quant3_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant3 = { (TfLiteFloatArray*)&quant3_scale, (TfLiteIntArray*)&quant3_zero, 0 };
const ALIGN(16) int8_t tensor_data4[10*20] = { 
  42, -78, -64, -21, 84, -14, 99, -76, 2, -22, 29, -12, 66, 84, 62, -82, 6, -16, -50, 1, 
  -52, -90, 50, 79, 43, -15, -46, -76, -65, 6, -43, -15, 48, 26, 48, 85, -47, 29, -38, -9, 
  -22, -61, -6, 76, -42, -58, -33, 11, -41, -3, 29, 21, -24, -79, -11, -77, 65, -89, -83, -57, 
  49, -18, 76, -17, -55, 61, -52, -33, -22, 74, 86, 9, -54, -94, 21, -48, -24, -55, 92, 65, 
  -38, 51, -89, -45, -71, 63, -18, 20, -79, 87, 80, 37, -15, 37, 18, -85, -40, 83, 61, 35, 
  -79, 46, -45, 57, -15, -106, -13, 69, -97, -65, 64, 50, -32, 54, -24, -37, -31, 54, -63, 29, 
  78, 12, -50, -85, 65, 57, 10, -24, -24, 17, 58, 7, -60, -40, 30, -17, 48, -29, -11, -32, 
  -16, 99, 39, 58, -8, 81, 74, -98, 93, -40, -55, 127, 53, -15, -111, 53, 70, 14, 6, 81, 
  50, 31, 40, 8, 70, 27, -83, -20, -28, 28, 80, -1, 3, -88, -28, 69, -74, 61, -46, -42, 
  34, -79, -17, 7, 62, 91, -21, 12, 69, -68, -50, 11, -58, -47, 57, -25, -16, 70, 3, 57, 
};
const TfArray<2, int> tensor_dimension4 = { 2, { 10,20 } };
const TfArray<1, float> quant4_scale = { 1, { 0.0046872757375240326, } };
const TfArray<1, int> quant4_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant4 = { (TfLiteFloatArray*)&quant4_scale, (TfLiteIntArray*)&quant4_zero, 0 };
const ALIGN(16) int32_t tensor_data5[20] = { -4, 1, 5, 11, 1, 0, -8, -4, 0, 42, 20, 4, -2, 9, 0, 5, -4, 8, -2, 7, };
const TfArray<1, int> tensor_dimension5 = { 1, { 20 } };
const TfArray<1, float> quant5_scale = { 1, { 0.0014543890720233321, } };
const TfArray<1, int> quant5_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant5 = { (TfLiteFloatArray*)&quant5_scale, (TfLiteIntArray*)&quant5_zero, 0 };
const ALIGN(16) int8_t tensor_data6[20*783] = { 
  1, -27, -12, 36, 12, 4, -1, -40, 1, -74, -13, 15, -38, -19, -34, 25, 12, 20, -28, -48, 25, -2, 60, 37, -17, 60, 26, 4, -36, -59, -11, 9, -2, -66, -56, -10, -10, 45, 9, -43, -12, 4, -8, 10, -25, 40, -20, 28, -27, -12, 14, -13, 23, 1, -14, 23, 38, 47, 75, 56, 43, 9, 22, -15, 8, -15, 32, 45, 63, -9, 12, -34, 8, 30, 39, 16, 60, 27, -20, 31, 17, 9, 16, 27, -8, 7, -40, -13, -61, -46, 16, -19, -45, 16, -6, -34, 56, 37, -18, -13, -1, -36, 39, 72, 14, -20, 5, 40, 0, 23, 80, 50, 58, 66, -1, 47, -25, 12, -15, 17, 33, 12, 14, 52, -40, -4, 34, 1, 51, 3, -41, -31, 26, 12, 59, 3, 29, 64, -6, 24, 53, -6, -37, -39, -36, -23, 8, 56, -12, -4, 5, 50, 8, 51, 38, 0, 24, -2, -29, 25, 38, 58, 10, -12, -2, -23, -40, -36, 27, 41, -8, 8, -12, -11, -23, 19, 30, 18, -19, -26, 26, 34, -32, -39, 5, 28, -14, -48, 6, -2, 56, -16, -4, 33, 34, 28, -41, -9, -33, 10, -42, 5, 28, 23, 30, -21, 47, -23, 17, 21, 10, 23, -8, -23, -36, -7, -18, -22, -21, -21, 4, 32, 20, -51, 18, -35, -15, -22, -27, 43, -2, -35, -23, -9, -19, -7, 25, -13, 13, 54, -3, -34, 13, -35, 23, 46, -15, 17, 2, 41, 21, 43, 0, 2, -57, -40, -2, 13, -24, 11, -12, 51, 10, 5, -11, 27, -22, 20, 25, 22, -4, -39, -17, -9, 0, -38, -16, 14, -5, 0, 33, -22, 21, -26, 1, 6, -34, -6, -34, -16, -4, 52, 5, -13, 37, -2, -24, 4, 30, 40, 1, 30, 5, -42, 18, -22, 56, -47, 39, 43, -21, -60, -39, -49, -34, -49, -29, -43, 24, -1, 12, -25, 15, 34, 40, -16, 9, 35, 37, 10, -22, 10, -39, -38, -19, 14, -21, 27, -65, -50, -44, -48, -4, 0, -28, 36, 1, 6, 16, -34, 31, 52, -45, -12, 26, 2, -30, -34, 30, -1, -9, -23, 18, 32, 23, -11, -55, -12, -40, 50, 11, -35, 16, 25, 5, 17, -52, -45, -20, -46, 5, 44, -29, 12, 57, -35, 4, -4, 59, -8, 46, -14, -59, -23, 13, -16, 2, -68, 7, 22, 14, 27, -5, 23, -3, -50, 19, 10, 17, -6, 15, 38, 4, 7, 0, -39, 50, -52, 4, -68, 20, 22, -17, 40, 24, -18, 80, 7, -75, -9, 22, 53, 74, 14, -37, 11, 32, 36, -47, -32, -29, 10, 30, -29, -63, -29, 23, 14, -42, -30, 34, -16, 40, -11, 50, 15, -34, -14, -24, 8, -19, 50, 3, -32, 7, -52, -24, 7, -65, -23, 13, -9, 29, 47, 10, 26, -44, -14, 18, 30, 61, 22, -25, -6, 35, 11, -46, -20, -12, 7, -9, -24, 29, -4, 0, -26, -46, 25, -20, 8, -40, -25, -72, -23, 30, -8, -23, 15, -44, 2, 28, 10, -31, -27, -9, -21, 9, -30, -19, 0, -50, 26, -19, 20, 8, 28, 14, 10, 16, 52, -19, -17, -7, -46, 5, 23, 12, -33, -9, -28, -1, 4, 33, -59, 8, 6, -30, -23, -8, -18, 11, 15, -48, 24, -42, -40, -26, -49, 1, 7, 26, 6, 13, -3, 39, 87, -9, 34, 13, 5, 13, 36, 33, 22, 13, -39, 10, 24, 39, 42, 30, 13, -58, 14, -2, 23, 5, 61, 13, 18, 24, 58, 16, -36, 20, 35, 2, -7, 24, 20, -3, 26, 4, 22, -62, -44, -79, -32, 16, 9, 37, 42, -19, 45, 23, 16, 14, -17, -30, -54, -31, -42, -2, -15, -3, -36, 18, -42, -13, 3, 28, 0, -19, 49, -23, 42, 56, 32, -18, 3, 6, 46, 1, -13, 28, -14, 7, -37, 14, 53, 46, 40, -10, 35, -1, 1, -32, 1, 48, -12, -30, -1, -15, 10, -26, 6, 55, -9, 21, 46, 19, -4, -39, 28, 22, -21, -3, -25, -40, -35, -28, 27, -22, 22, -23, 20, 0, -53, 11, -20, 25, 22, -26, -11, -19, 17, 8, -41, -19, 36, 27, 12, 33, -10, -17, -28, 16, 51, 58, 63, 69, 17, 22, -9, 48, -1, 11, 2, -16, 5, -31, 8, -10, 21, -29, -10, 12, -14, -9, 54, 7, 71, 2, 4, 0, 0, 36, -6, -3, -18, -19, -53, -23, -10, -16, -1, 26, -33, -46, 31, -58, -25, -16, -32, -63, -59, -24, -15, 9, -23, -33, -23, -1, -23, -8, 6, -27, 45, -10, -19, 53, 9, 41, -16, 40, -11, -29, 5, 48, -1, -15, 38, 6, 
  -48, -48, 35, -8, -29, 5, 11, 11, 13, 27, -38, 29, 16, 3, 32, -1, 57, 53, 66, 2, 19, 23, 61, 1, 30, 30, -20, 12, -20, -30, 10, 37, 63, 60, 50, 5, -27, 4, 13, -5, 13, -10, 34, 29, 37, -7, 30, -30, 9, -6, -43, -7, 1, -26, -7, -26, -19, 45, 38, -33, -5, 41, -3, -2, -4, 22, 57, -22, 15, 6, 26, -38, 36, 13, 17, 40, -17, -35, -10, 47, 18, -12, -14, 8, 46, 45, 19, -7, 54, 29, 51, 49, 79, 34, 13, 34, -11, -29, 12, -17, 37, 55, -3, -12, -28, 31, 45, -3, 36, 0, -28, -48, 8, -31, -45, 23, -2, 3, -81, -78, -17, -53, -23, -40, -7, -27, -18, 5, -65, 4, -38, -27, 18, -30, 7, -5, -54, -31, -14, 24, -63, -7, -44, -42, -1, 18, -5, -24, -47, -28, -21, -20, -9, -8, -10, 26, 29, 44, -33, -39, -50, -26, 18, -28, -42, -13, -35, -3, -28, -12, -14, -33, 13, -11, 32, 76, 44, -13, -28, -26, -35, 9, 25, 25, -13, 36, 8, 9, 43, 40, 35, 29, 45, 33, -20, 2, -7, -7, -38, 30, 41, -10, -20, 16, -29, 1, 15, 46, 32, 48, -6, -12, -11, -13, -34, 18, 44, 40, 21, -32, -40, -45, 1, -32, 3, 23, -21, -15, -32, -48, 33, 29, 41, 20, -44, -58, -13, -8, -9, -18, -56, 29, 18, 47, -29, -34, -16, -49, 6, 24, -5, -56, -28, 6, 45, 19, -8, -6, -27, 28, -53, -20, 24, -39, 27, -13, -34, -2, 43, -31, -19, -8, 29, 18, 52, -37, 43, 20, 23, -7, -29, -24, 15, 57, 31, 2, 44, -41, 42, -26, 38, 6, -4, 34, 8, 12, 3, -5, 8, -14, 59, 39, 6, -9, 5, -1, -26, -9, -46, 6, -8, 6, -6, -38, 58, 5, 30, 25, 2, 15, 27, 85, 36, -46, 17, -17, 24, -5, 36, 18, -1, 16, 12, 63, 54, 55, -1, 27, 60, -27, 45, 46, 17, 35, 60, 48, 3, -37, -31, 11, 101, 28, 11, -14, 17, -13, -19, -41, -47, -19, -6, 20, 57, 30, -7, 75, 16, 61, -37, -4, -5, 16, 45, 63, 20, 40, -18, -4, 60, 53, 15, 60, 12, 73, 35, 1, 9, -22, -40, 46, 8, 20, 19, -22, 46, 4, 46, 51, 0, -27, 19, 11, -19, 20, 25, 25, -10, 15, 5, -5, 37, -34, -38, 47, -36, -27, -10, -14, -7, 1, -21, 20, 28, -50, 2, -39, -38, 22, 24, -14, 11, -38, -32, -27, 18, -40, 38, 4, 58, 39, 5, -41, -20, 45, 19, -1, 6, 15, 2, 29, 6, -5, 21, -51, 14, 42, 11, 32, 33, 27, 14, 7, 15, 44, 14, -18, -5, 48, 35, -46, -50, 12, -1, 36, -49, 25, 22, -23, -13, 12, 0, -41, -15, -35, -3, -30, -78, -21, -35, 11, -40, -23, 18, -32, -52, -15, 22, 5, -55, -24, -49, 3, -10, -4, -2, 28, 39, 65, -12, 10, -50, 28, -3, 37, 34, 24, 13, 26, -32, 40, 29, -70, 7, -29, -39, -39, 14, 33, -30, 38, 5, -29, 28, -3, -12, 3, -33, 2, -29, 5, 12, 20, -19, 70, -44, 45, -30, -26, 42, -12, 6, -77, -87, -10, 15, 23, -25, 31, -12, 12, -20, 52, 2, -11, -16, 11, 32, 72, -16, 13, 47, -13, 34, 23, 39, 8, 25, 51, 51, 64, 61, -21, -22, -27, 52, 50, -20, -15, -16, -21, 8, -29, -32, 28, 48, 49, 15, -27, -26, -16, 28, 41, -3, 55, -9, 28, 63, 4, -43, -13, 59, 32, 12, -17, 16, -7, -9, 18, 69, -24, -42, -35, -2, -44, -32, 12, -5, -11, -76, 20, -41, -36, -13, -99, -8, -29, 0, 25, -49, 22, -3, -42, 29, -44, -39, -30, 7, -45, 1, -81, 8, -5, -11, -53, -38, -18, -14, -99, -11, -80, -43, -77, 16, 1, 42, 8, -5, 2, -6, 7, 38, -2, 53, 28, -13, 72, 0, 15, 43, -14, -16, 2, -19, -2, 15, 51, -20, 56, 14, 14, 39, 57, 56, 20, -7, -71, -62, -2, 2, 5, -13, 16, 12, -14, 18, -31, 25, 22, 26, 31, -4, -60, 11, 14, 22, 3, -25, 13, 23, -33, -8, -8, -19, -14, -12, 2, -1, 17, -1, 25, -23, 35, 29, 27, 14, -1, 34, 4, 16, -1, 25, 77, -28, -10, 84, 16, 44, -2, 62, 1, -4, 32, 17, 3, 40, 18, -24, 63, 3, -10, -4, 62, 35, 53, -17, 67, -22, -44, -22, 59, -25, -30, -27, 51, -2, -11, 48, 39, 57, 38, -28, 5, 6, 
  11, -13, -7, -25, 25, -6, 27, 20, 12, 2, -56, -14, -45, -25, -45, -14, -51, -11, -69, -12, 6, -116, -38, -75, -14, -27, 31, -7, -68, -38, -14, 7, 20, -35, -10, 13, -27, -1, 17, -45, 50, 39, -19, 10, 1, 1, -15, -18, 32, -12, 45, -13, 29, 35, 22, -14, 31, 30, 38, 6, 84, 7, 1, 26, 4, 57, 9, -49, -10, -15, 5, -19, -6, 21, -29, -16, 1, 28, -9, -35, 1, -22, 13, 24, 12, -11, -7, -23, -30, 3, -43, 43, -13, -43, 44, 38, 46, 31, 11, 10, -53, -33, -18, 14, 53, 5, 49, 32, -10, -10, -5, 46, 29, -27, 0, -37, 13, 52, 1, 52, 1, 60, 70, -31, 45, 48, 22, 38, -27, 9, 31, -18, 20, 45, 53, 29, 3, 71, 46, 16, -20, 38, 31, 41, -34, 10, -49, -12, -15, 24, 37, -30, -40, -10, 30, 34, 22, -8, 53, -18, 15, 31, 11, 50, -21, -38, -48, -38, -24, -18, -23, -5, -17, -43, -19, 21, 34, -25, -24, -52, 15, -40, -14, 36, -27, -10, 13, -22, 0, -40, -7, -3, -23, 37, 13, -28, 11, -49, -37, -5, 36, -1, 3, -15, -46, -52, 3, 10, -38, 23, 17, -28, -2, -1, 47, 12, -54, 13, 38, -9, 6, -2, 11, -10, -7, 5, 2, -43, -37, 1, -15, 14, -7, -8, 51, 4, 17, 4, 20, -10, -4, 41, -31, -24, 9, -30, -23, -7, 33, -7, 32, 8, 16, -36, 9, -22, -43, 16, -62, -42, 33, -28, -39, -23, -26, 18, 63, 0, 22, 32, 63, 50, 59, 27, 66, 37, 28, 23, 15, 44, 69, 26, 0, 32, -14, 19, 55, 9, 63, -39, -5, -28, 53, 69, 67, 34, 56, -37, 28, -29, 53, 64, 50, -23, -1, 25, 32, 7, 66, 21, 6, 71, 31, 55, 86, 25, 77, 27, 15, 64, 6, -11, 24, 39, 46, 0, -35, 8, -31, 33, 8, 33, 25, -12, 2, 34, -39, -21, -23, 16, 55, 40, -9, -19, 48, 28, 33, 9, 41, 17, -14, -19, 21, -17, -1, 3, -28, 17, 30, 12, 9, 5, -6, 31, -6, 45, -4, 3, 20, -21, 14, 3, -19, -5, 9, 3, -52, -56, -36, 11, 24, -7, -18, 37, -15, -37, -39, -31, 4, 18, -32, 21, -28, 17, -22, 35, 38, 7, -27, -24, 46, -27, 41, 37, 31, -26, 28, -20, -12, 14, 12, 60, -17, 23, 25, 8, 7, 23, 15, -13, 35, -19, -18, -5, 28, 3, 26, -17, -4, 25, 0, -7, 32, -28, 80, 17, 13, -38, 0, -11, -26, -5, 34, -2, 44, 54, -19, -28, -29, 63, -3, -36, -26, 12, -11, -41, 6, 28, -2, 29, 42, 2, -8, -45, -6, 43, 35, 27, 56, 32, 6, 19, -41, -10, 0, 13, 27, 19, -17, -34, 1, -7, 56, 67, 18, 39, 7, 46, 28, -19, 64, 4, 36, 66, 53, 60, 56, -14, 67, 44, 28, -26, -36, -6, 1, -1, 45, 39, 17, 5, 13, -37, 27, 22, 35, -5, -20, -24, 27, -21, -6, -28, -4, -27, 21, -33, 15, 75, 62, 24, -23, 41, 49, 8, 84, 26, 35, -16, 24, 21, 33, 107, 109, 90, 61, 24, 65, 73, 19, 5, -12, 62, -8, -27, 45, -2, 71, 31, -9, 29, 0, -24, -29, -34, 35, -10, 24, 59, 3, 42, 16, -4, 86, 108, -6, -5, -76, 0, -23, 72, 34, -21, 47, 15, -11, 64, 21, 65, -1, -24, 6, -29, 21, -8, -23, 82, -15, -12, 7, 38, 13, 2, 0, 28, 45, 11, 62, -33, 44, 0, 60, 1, 50, -14, 85, 29, -7, 27, 52, 2, 73, 28, -30, 37, 28, 37, 13, -3, -2, 47, -22, 32, 40, 19, 23, 21, 38, 44, 1, 13, 26, 9, -32, 45, 48, -34, -17, -24, 41, -22, -40, 50, 46, -5, 27, 50, 5, 24, -18, -17, -11, -14, 36, 20, -24, -7, -18, -20, 25, 32, -14, 7, 26, -9, 48, 19, -49, -38, 16, 10, -28, -25, 45, -19, 7, -2, 11, 2, -3, -46, 25, 22, -12, 28, 35, -54, -63, -11, 20, -45, 9, -1, -8, 26, 8, 14, -13, 7, 10, -9, -10, -12, 30, 8, -8, 26, -9, 9, -19, 21, 38, 29, 20, -17, 48, 60, 34, -21, 14, -24, -43, -36, 7, 15, 22, 26, -12, 11, 36, -33, -48, 10, 17, -12, 23, 14, -13, 18, -21, 3, -15, 11, 30, -31, 17, 5, -43, -42, -19, -27, -21, -22, 2, 10, 30, 5, 27, 10, 21, -33, 17, -9, -38, -24, 20, 8, -15, 46, 44, -17, 8, -15, -49, 
  -53, 6, 5, 27, -4, 67, 15, 32, 10, -10, 33, 39, 20, -6, 27, -25, -48, -11, 6, 41, -7, -3, -27, -5, 71, 61, 0, 51, 70, 107, 78, 69, 116, 25, 47, 81, 85, 17, 61, 38, 15, 63, 63, 92, 79, 33, 36, 1, 70, 20, 18, -15, -40, -44, -3, -35, 13, -22, -13, -4, 54, 20, 49, 63, -12, 11, 54, -51, -7, -46, 39, 12, -13, -26, 3, 47, 41, 73, 42, 55, 13, 44, 46, 18, -3, -57, 14, -23, 49, 3, 4, 25, -39, -9, 48, -8, -15, -12, 64, 10, -17, 19, 30, -18, 21, 25, 30, -17, -35, -11, -55, -13, -5, 30, 4, 51, -54, -38, 6, -11, -81, 3, -18, -10, -34, 8, -19, -42, -16, -5, -26, -58, -45, -3, -23, -35, -36, -12, -37, 15, 23, -6, -36, -57, -38, -12, -47, -49, -23, -41, -18, -48, 1, -5, -64, -8, -12, 21, -22, -53, -24, 6, 14, 47, -28, 12, -36, -55, 17, -14, -28, 7, -1, -33, 25, 18, 41, 48, 39, -39, -12, 17, 39, 40, -5, -48, -13, 27, 8, -21, -14, -60, -10, -25, 10, 39, -19, -50, -17, 3, -6, 8, -17, -38, -27, -15, -10, 38, 54, 1, -25, 44, 18, 1, 2, -26, -46, -14, -54, -18, 35, -2, 33, 12, 73, -25, 50, -18, -11, 21, -12, 59, -15, 50, 9, 38, -25, 7, 27, 40, 5, 10, 38, -42, -49, -18, -19, 17, -50, -19, -33, 0, -9, -47, -12, -27, -60, 7, 21, -8, -19, -34, 48, 22, -36, -16, 47, -14, -14, -53, 35, 42, 15, -16, -45, -28, 44, 12, 12, 35, 101, 76, 26, 7, 29, 2, 98, 13, -15, -2, 46, 45, -29, 26, -3, -37, 13, -67, -25, 21, 14, 15, 33, 6, 22, 20, 1, -4, 30, -20, 2, 14, 3, 13, 36, -12, 45, -22, -71, -78, -47, -35, -41, -61, -36, -72, 10, -38, -48, 20, 28, 11, -1, -25, 15, 49, 10, 38, -1, -6, 4, -36, -24, 20, 29, 7, -5, -17, -44, -15, 12, -58, -44, -27, 11, 10, -25, -15, -1, -7, 59, -1, -63, -43, -13, 15, 7, -35, -22, 22, -4, -8, -5, 35, 36, 7, 7, -22, 6, -25, -31, -21, -46, -36, -10, 5, -52, -14, 23, 29, 13, 6, -17, 30, -56, -4, 20, -59, 2, -40, -20, -19, 38, -8, -19, -65, -45, -24, 12, 6, -2, -31, 36, -10, 4, 10, 4, -17, 45, -43, -35, 41, -7, 11, 36, -29, 12, 17, -39, -23, -9, -20, 4, -8, 43, 39, -30, -55, -56, -20, 12, -42, 1, -20, 58, -13, 16, 6, -6, 8, 16, -15, 1, -8, 27, -15, -30, 18, -45, -14, -27, 7, -49, -10, -3, -27, -24, -42, 6, 3, 2, 13, -56, -50, 28, -36, 28, 6, 9, 34, -22, -12, -45, -19, -15, -15, -55, 24, -2, -22, -35, -21, 27, -18, 30, 26, -21, -33, 29, 9, 8, 32, 26, -57, -66, 10, -30, -2, -38, 11, 16, 54, -36, -37, 10, 20, -39, -16, 44, -40, -22, 21, 18, 102, 17, 8, -27, 2, -37, -28, -32, -50, -36, 13, -19, -33, 2, -94, -49, 1, -79, -40, -61, 3, 41, -20, 1, 28, 28, 28, 10, -11, 2, -19, -9, 47, 6, -34, -60, 22, -43, -28, -29, -16, -24, 25, 30, -12, 12, 5, -38, 29, -55, -10, 5, 17, -52, 30, 63, -46, -30, 9, 51, 59, 38, 30, 32, 34, 53, 8, 21, 35, 8, -44, -11, -3, 52, 19, -22, 32, 32, -1, 0, 5, -38, 17, -7, 33, -20, -40, 33, -41, -19, -13, 17, -7, 18, -56, -1, -26, -22, -3, -49, 15, -30, -53, 22, 23, 15, -46, -21, -57, -63, -41, -4, 11, -23, 36, -27, -24, -13, -16, 7, 24, -20, -12, 9, -38, -43, -54, 27, -25, 10, -24, 31, -27, -25, 1, -23, -40, -23, 15, 31, -42, -8, -41, 20, -18, 19, 3, 10, -22, 5, -31, 26, 7, -29, -36, -35, 11, -27, -49, -22, 22, -43, -21, 4, -42, 30, -74, -8, -66, -50, 8, -18, 26, -29, 18, -23, 6, -28, -31, -30, 7, -79, -27, -21, -10, -37, 34, 24, 0, 3, -35, -36, 1, 26, -48, 0, 17, -19, -10, -8, -50, 18, 13, 11, 26, -4, 33, 28, -14, -13, 23, -10, -41, -20, 24, -10, 58, -22, -42, 44, -35, 26, -35, -33, -19, 38, -4, -52, 55, -57, -16, 16, 8, 17, -59, -18, 8, 20, 28, 0, -53, 20, -36, -17, 6, 11, 4, 27, -11, 14, 12, -41, 35, -22, -9, 16, -51, -37, -38, 20, 
  36, 18, 6, -26, -38, -49, 23, -24, -31, 7, -19, 6, -24, -17, -28, 23, 13, 10, -7, -13, 12, 37, -9, 20, 11, 26, 55, 28, -40, -45, 26, -25, 20, -58, -31, -33, -20, -47, 7, 25, 0, 14, -23, -9, 22, -37, 33, 13, -29, 8, 19, 14, -53, -25, -16, 22, 1, 20, 45, 29, -35, -27, 53, 51, 5, 23, -19, 41, -44, -27, -53, -1, 24, 20, 28, 20, -28, -22, -29, -31, 25, -47, 22, -28, 8, -31, 11, -33, 21, -13, -13, -5, 4, 36, 20, 4, 5, -14, -30, -32, -4, -16, 35, 11, 51, -28, -43, -1, -18, 21, -25, -2, -18, 4, 14, 0, -22, -37, -34, -4, 44, -18, -22, 2, -30, 16, 59, -10, -5, 30, -11, -3, 23, 6, 21, 10, 36, 31, -37, 37, 22, 17, 36, 12, 32, -36, 57, 41, -17, -27, 3, 24, -7, -12, 31, 61, 46, -21, 44, -22, 0, 32, -41, -3, -34, -25, 7, -15, 46, 1, 6, -21, -17, 32, 18, 1, -16, 21, -12, 15, -13, 9, 16, 13, 18, -28, -14, -26, 30, -27, 43, -9, 21, -22, -7, 48, 8, -8, 12, -9, -28, 46, 10, -29, -12, -27, 4, -4, -23, 9, 39, 40, 29, 23, 33, 4, -16, -37, 19, 21, 20, 13, 27, -1, -11, 43, 15, 40, -5, 3, -13, -7, 24, -1, 57, -13, -8, 47, -13, -4, 57, 37, -31, -24, 46, -10, 32, -3, 60, -19, 63, -16, 40, -24, 22, 54, 42, 11, 36, 27, 19, 46, -39, 28, 25, 26, -50, 29, -20, 35, 9, -26, -32, 10, -29, 5, 23, -52, 4, 5, 35, 6, 7, -4, 4, -34, -55, 0, 18, -58, 8, 0, -43, -37, 28, -16, -47, 21, -23, -36, 16, -6, -3, 31, 18, 11, -21, 42, -6, -8, -17, -34, -17, 5, 8, 41, 27, 23, 50, -27, -24, 14, 39, 32, -4, 33, -17, 17, 71, -9, -4, 43, -29, 37, -12, -33, -22, 39, -10, 40, 20, -9, 6, -18, 57, 1, -2, -17, 41, 34, -23, -42, -41, -19, 55, -20, 34, -42, -25, -23, -41, -12, -28, -12, -9, 29, -49, -4, 13, -40, -28, -26, -32, -45, -8, -2, -14, 21, -14, -80, -34, 0, -17, 4, -40, 16, -13, -9, 2, 15, 21, -33, 33, -37, -36, 13, 1, 15, 20, -5, 42, 30, 10, 25, -26, 4, 24, 36, -31, -38, 19, 13, 23, 11, -35, 5, 37, -13, -12, -7, -3, 21, 5, 37, 48, -25, 54, 33, 3, -34, -21, 4, -24, 10, -14, 26, 25, -15, -4, 29, 6, 21, 0, -45, -39, 41, -24, -29, -5, 1, -26, -23, -35, -2, 42, 50, 13, 28, 20, 13, 39, 30, 31, -20, -17, 20, 16, -19, 26, -19, 8, -14, 19, -20, 49, -4, -34, -33, -9, 8, 20, -10, 29, -8, 13, -19, 24, -28, 7, -31, 28, -38, 46, 1, 40, -1, -33, 7, -17, 28, 31, -7, -2, -31, 7, -12, 39, 41, -28, 49, -25, 39, 32, 8, -26, 9, 11, -4, 19, 50, 29, 39, 40, 5, 37, 42, -33, 27, 41, 14, -15, -16, -11, 27, 7, 10, -16, 19, 51, -3, -8, 38, -15, -24, -22, 3, -13, -15, -45, -39, 13, 62, -3, 13, 20, -33, -23, -55, 28, -42, -31, 21, 55, 34, 11, -15, 40, 35, -25, 37, 6, -26, 10, 33, 46, -31, 44, -16, 26, 38, -11, -17, -12, 58, -1, -23, 31, -31, 13, -14, -10, 25, 61, -6, -29, 44, -13, 44, 17, 41, -19, 52, -23, 24, 21, 4, -47, 9, 20, -11, 17, -16, -12, 19, 46, 31, 21, 37, 32, -20, 2, 28, -19, 52, 25, 23, 9, 22, -37, -16, 41, 50, 1, 46, 18, -2, -34, 0, 48, 38, -5, 32, 9, -26, -40, -15, 29, 11, -19, 62, 61, -4, 51, 54, -1, 27, -29, -25, 36, 32, -31, -2, -37, 4, -22, 24, 37, 17, -6, -16, -31, -27, -17, 32, -49, -51, -6, 31, 18, -7, 42, 47, -25, -42, 35, 52, -27, -5, 43, 39, 52, -16, -6, 20, 22, -34, 10, 33, 8, -23, 40, -29, -8, -41, -25, 6, -15, 42, 47, -23, 38, -19, -29, -45, 1, -35, -46, 19, -13, -32, 39, -34, 26, -2, 54, 16, 24, -46, -3, 40, -13, -31, 5, -29, 27, -21, -7, 16, -78, -76, -25, -3, 43, -20, -59, -24, -13, -44, -28, -47, -80, -73, -8, 7, -22, 8, 36, -18, -13, -55, -6, -26, -38, 5, -22, 51, 1, -23, -11, 14, 53, 11, 12, -38, 45, 2, -3, 48, 30, 48, 0, -11, -1, 
  -9, 55, -2, -1, -16, -34, 9, 54, 3, 25, -18, -7, -24, 36, 7, 7, -32, 13, -6, 10, -14, -21, -5, -8, 35, 3, 35, -2, -5, 36, -33, -4, 24, -31, 14, -45, 23, -49, -1, 45, 29, 40, -19, -20, -22, -97, -35, 7, 28, 26, -11, -5, 49, 3, 38, 22, -1, -11, 32, -5, -9, -53, 31, -19, 10, -11, -44, 36, 37, 10, 11, -40, 6, -72, -63, -44, -41, -44, -15, -28, -56, -21, -58, -8, -39, -45, -3, -4, 23, -22, -4, -26, -34, 47, -5, -8, -27, 1, -12, 16, -12, -12, 18, -32, -14, -26, 29, -37, 15, 38, -3, -23, 3, 18, 1, -10, 33, -24, -12, -67, -57, 17, -53, -7, -17, 20, -15, -34, -35, -55, -17, -1, -50, -36, -20, -6, -9, -42, 24, 19, -3, -10, 14, -14, -15, -62, 34, 46, 38, -24, 28, 15, 9, -40, 36, 6, -6, 13, -39, 6, 49, -26, 9, -69, 26, -56, 30, -13, 24, 14, -16, 31, -25, -12, -34, 9, -39, -43, 1, 2, 38, 11, -51, -55, -42, -53, -30, -53, 10, -74, -54, 17, -9, -25, -11, -51, 14, -17, 25, 5, -17, -3, 26, 31, -29, -33, -38, -26, 15, 30, 18, -24, -19, -4, 33, -39, -39, 45, 11, -47, -22, 61, 0, -5, 53, 35, -52, -39, -21, 68, 22, 26, -6, -32, -34, 18, 35, 4, -7, -14, 33, -23, 32, 17, 24, 21, 46, 18, -7, 16, 31, 6, 22, -8, 12, -36, 21, -45, 28, 6, -39, 16, 16, -46, -6, 40, -50, 38, 27, 23, 5, -15, 15, -31, 41, 33, 3, -6, 14, 3, -12, 62, -43, -4, 19, 23, -1, -7, 10, 25, 34, 8, -8, -30, 13, 74, -37, 100, -57, -45, -19, -36, 68, -36, -34, -2, -16, 24, -60, -51, 63, 40, 13, 1, -39, 37, -32, 28, -15, -14, 42, -22, 40, 50, 21, 61, 5, -19, 23, -2, 3, 17, 42, 26, 1, 21, -21, -67, 27, -92, -28, -15, -38, -17, -49, -37, 40, -28, 55, 8, -45, 24, 16, 81, -14, -61, 21, -48, -16, 40, -33, 1, 1, -4, 19, -49, 19, 36, 24, 0, -29, 24, -11, 36, 25, -28, 49, 7, -33, -12, -31, -18, -28, -14, -24, -49, 23, 23, 6, 47, 47, 22, 21, -56, -26, 22, 23, -34, -24, 24, 38, -40, 38, 29, -9, -7, -15, 11, 4, -30, 40, -17, 20, -53, -25, 25, -46, 27, 1, 45, 44, -64, -5, -33, -49, 9, 42, -6, 4, -22, 9, -53, 16, 33, -42, -44, -38, -38, 24, -31, -36, 20, -56, -56, -38, 19, -23, -34, -59, 1, -20, -28, -26, 17, -6, -43, -22, -25, -44, 11, -3, -33, -81, -14, -12, 23, 53, -11, -47, -49, 16, 61, -28, -20, -6, -18, -19, -45, 0, 13, -22, 33, 19, 25, 46, 58, 31, -5, 11, -25, -25, 45, 43, -51, -8, -5, -29, -8, -71, 26, -59, -68, -36, 4, 35, -15, -28, 29, -22, 14, -47, -36, 29, -10, -37, -11, -46, 27, -31, -48, -6, -18, 37, 40, -53, -6, -38, -33, 32, -11, 21, 40, 38, -9, 16, 21, -45, -17, 26, 19, -21, 1, 32, 35, -10, 36, -30, -13, -13, 30, 31, 30, 2, 13, -15, 35, -8, -4, 7, 0, 8, -35, 6, -43, -29, -32, -6, -37, 6, -6, 5, -5, -8, 32, 39, -37, 38, -39, 16, 8, 63, 12, -36, -50, -39, -14, -51, -31, -5, -47, -75, -54, -10, 55, 32, -18, 16, 42, 2, -22, 6, -6, -24, 15, -37, -2, -16, -6, -40, -48, 14, 15, 31, 0, 19, -8, 29, -29, 13, 41, -27, 51, 24, 1, -6, 34, 37, -21, 41, 41, -2, 48, 26, -14, 24, 37, 37, 55, -14, 21, 23, 20, 34, 20, 39, -38, -57, 22, 10, 18, 34, -52, -16, -7, -37, -27, -2, -18, 16, -21, -23, 36, 30, 11, 6, -22, -26, 32, 2, -39, 7, -13, -35, 30, -12, -33, -14, -12, 19, -54, -25, -17, 25, -17, 23, 30, -35, 25, -23, -26, 38, 8, -14, 41, 82, 46, 4, 1, -18, -7, 16, 28, 29, 6, 4, 21, -31, -45, -1, 1, -1, 22, 32, 31, 5, 7, -28, -20, -22, 18, 3, 31, -17, -26, -1, 1, -15, 43, 36, 43, 58, -16, 29, -49, 26, 13, 33, 12, 42, 24, 19, -35, -27, 32, -21, 43, 45, -13, -13, 28, 5, -4, 48, -17, 19, -9, 19, 2, 24, 18, -19, 54, 17, 16, -18, 30, 5, 46, 18, -12, 15, -14, 42, -15, -9, -65, 46, -26, 36, 19, 17, -16, 28, 
  3, 6, -21, -30, -33, -21, -2, 37, -14, 40, -1, -18, -21, 9, 42, 3, -15, -2, 40, 42, -38, -12, -32, -2, -48, -41, -5, -68, 18, 27, 55, -52, 15, -5, -20, 55, -46, 24, -32, 64, 24, -3, -35, -29, -32, -34, 34, -41, -10, -17, -35, 22, -43, 27, 8, 12, 23, 38, 5, -20, -16, 10, 16, -49, 8, 17, -42, 14, -48, -15, -4, 34, -18, 11, -18, -13, -18, 5, 4, -32, 16, 13, -23, -8, -38, -26, 12, 12, 14, -8, -37, 31, -11, 57, -21, -58, -46, -71, -83, -33, -51, -51, -40, -56, 10, -16, -14, -40, -32, -45, -41, -1, -4, -55, 6, -11, 30, -20, -63, -18, -24, 7, -34, 1, -7, -23, -2, 20, -16, -37, 27, -31, 23, 30, 21, 26, -45, 23, 37, 31, -8, 20, -26, -44, -20, 15, 8, -75, 18, 15, -43, 29, -3, 27, -32, -56, 2, -16, 21, -44, 23, 1, -34, -45, 16, -17, -19, 21, 27, -6, -58, 17, 19, 31, 25, -20, -36, -29, 6, -7, 18, -25, 42, 17, -11, -37, 33, -17, 3, -22, 23, -19, 57, 8, -30, 7, 67, 80, -6, -12, -4, -4, 14, -16, -4, 52, 47, 16, 1, 45, 13, 13, 26, -29, -40, -31, 2, -4, -18, 17, 4, 27, -22, -21, 15, -41, 4, 34, 30, -13, -19, -1, 35, -30, -43, 7, -7, -41, -10, -62, -35, -7, 2, -32, -46, 6, 8, 28, 31, -58, -54, -38, 4, 50, 6, -20, 38, 20, 41, 5, 44, 21, -62, 34, 29, 14, -1, -6, 10, 57, 20, 18, -7, 4, 38, 33, -7, -4, -20, 40, 71, 16, 26, -5, -18, 30, 49, -9, 18, -3, 27, 16, 16, -22, -22, 17, 55, -9, -53, 39, 11, 45, -12, -36, -4, 10, -26, 17, -43, -66, -29, 35, -12, 12, 48, 37, 26, -19, -20, -64, 8, -26, 24, 34, -41, -26, 47, -37, -76, 2, 32, -8, 11, -25, -2, -35, 20, 38, 8, -21, -1, -20, 42, 6, 44, -40, -35, -5, -21, 10, 7, -24, -14, -18, -59, -20, -15, -14, -42, -4, -32, -42, -45, 0, -54, 28, -20, 22, 66, 7, -33, 10, 11, 7, -29, -28, -52, -32, 32, 34, -12, -45, -34, -56, -26, -37, 2, -22, -52, -57, -54, 10, 14, 28, 0, 12, 16, 28, -41, 19, -6, 1, -29, -39, 46, 23, 44, 42, 6, -16, 33, 27, -11, 7, 18, 9, -50, 34, 47, -25, 11, 3, 8, -37, -57, 6, -63, 2, 4, 3, 1, 7, -32, 31, -20, -10, -15, 14, 67, 37, -17, 37, -42, -26, 37, -2, 24, 45, -16, 60, -16, 14, -7, -5, -21, -33, 45, -32, -42, -49, 15, 2, 29, -11, 45, 35, 1, 13, 0, -43, -7, -6, -29, 30, 8, 23, -12, -2, -3, 27, -10, -29, -4, 13, 19, -2, 26, 47, -15, -6, 23, 4, 45, 3, -39, 27, 24, 13, 13, -4, -7, 2, 30, 16, 41, 10, 32, 30, -28, 21, -33, 48, -7, -9, 3, 0, 7, -16, 32, 25, -7, 20, -20, -5, 38, 23, 20, -10, -17, -8, -30, 47, -19, 21, -23, 8, 6, -19, 31, -15, 31, -24, 18, 79, 21, 58, 15, 12, 56, 17, 21, 3, -18, 4, 30, 13, -34, -21, 16, 38, 8, -15, 37, -6, 23, 36, 4, 28, 16, -46, 29, 18, -45, -19, -19, 10, 61, 6, 23, 32, 23, 15, 3, 24, 43, -17, 32, -13, 45, 55, 50, -33, 63, 23, 56, -20, 23, 55, 54, 13, 70, 51, -5, 13, 10, 19, 15, 29, 2, 3, 39, -13, 6, -9, -58, -34, 17, -19, 66, 31, -54, 11, -55, 15, 24, 25, 51, 34, -9, 8, 5, 26, -11, 20, 8, 29, -13, 36, 39, -6, -25, 3, 52, 11, -23, -7, -3, -1, 21, -16, 28, 44, 41, -57, -32, 22, -22, 4, -10, 35, -3, 52, 68, -21, 34, -18, 26, 47, 20, -26, 28, 33, -13, -11, 70, 41, 1, 37, 53, 17, 18, 20, 1, 13, 76, 36, -11, 16, -18, 64, -21, 14, 29, -19, -35, 48, -8, 30, 13, -59, 23, 33, 31, 44, 12, 47, -2, 9, 29, -29, -24, 15, -24, 29, 13, 6, -19, -8, 11, -1, -37, 39, -33, -33, -50, -61, -8, 27, 35, 12, -66, 3, -30, -47, -24, -38, -2, 32, 13, 25, 38, 17, -20, -34, 7, -9, -11, 29, 43, 21, -23, 67, 35, -19, -6, 4, -34, -18, 13, -4, 11, 45, 36, -17, -13, 6, -36, 23, 15, -54, -44, -67, 3, -8, -51, 9, 2, -45, 38, -40, -22, -34, -29, 
  39, -60, 13, 37, 40, -8, 0, 14, -19, -4, -15, 36, -37, 38, -40, -36, 12, -28, -12, -11, -10, -1, 19, 20, -4, 46, 3, 26, -43, -36, -34, 18, -8, -60, -34, -87, -6, 13, 34, -41, -62, -16, 22, 32, 22, -5, -21, -90, -66, 18, -33, 3, -46, -28, -14, -56, -60, 20, 18, -40, -37, -16, 7, -65, 3, -3, 36, 18, -3, 28, -56, -21, 17, 56, 46, 24, -24, 29, -43, 21, 49, -38, 45, -3, 10, -30, 16, 9, -18, -39, -16, -53, -15, -54, -52, -33, -16, -25, 12, 40, -13, 22, 10, -48, -20, -27, -1, -7, 70, 13, -11, -37, 17, 21, 36, -24, 13, -26, -9, -13, -34, 5, -6, -38, -12, -21, -54, -47, -2, -3, 22, -16, -42, -26, -55, 27, -17, -41, -18, 13, 32, 11, -2, 8, -12, -1, 0, -17, 21, -12, 2, -20, 14, 30, 18, 0, -51, -29, -25, -29, -41, -56, 14, -17, -19, -50, -54, 17, -48, -12, 16, -26, -25, -2, -54, 5, -23, -35, -19, -5, 11, 40, -17, -43, -37, 29, 29, 28, 31, 7, -18, 7, 16, 24, -27, 22, 33, 16, -8, 31, -38, -14, -20, 28, 24, 62, 11, -22, -22, -16, -23, -36, -51, -18, -18, 29, 70, -24, -8, 20, -32, 9, 10, 5, -23, -26, -7, 2, -30, -3, 20, -21, -54, 48, 3, 28, 13, 20, 36, 39, 38, 14, -25, -1, 16, 2, -3, 35, -12, 49, -7, 50, 2, 15, 21, -45, -12, 44, -33, 20, -54, 34, 112, -29, -39, -6, 11, -4, 1, -59, -35, -46, -43, -39, -9, -47, -33, 27, -15, -36, -30, 15, 50, -20, 97, 39, -2, -5, -4, 7, 47, 65, -30, 18, -19, -21, 6, 29, -25, -9, -47, -57, 4, -32, 17, -36, -20, 1, 8, -25, -72, -45, -50, -38, -115, -109, -6, -7, -36, 38, 13, 1, 5, 3, 8, 11, -15, -10, 47, -6, 21, -25, -2, 3, -6, -17, 8, 38, -8, 0, 19, -57, -28, -33, -19, 20, 1, -25, -36, -9, 42, -13, 20, -9, -47, -32, -90, -20, -31, -49, 3, -5, 22, -33, -26, 29, -72, -46, -80, 35, 26, -19, -3, -47, -43, -48, -8, -17, -48, -65, -16, -1, -35, -40, 17, -47, 38, 1, -2, -4, 66, -11, -7, -62, 46, 0, 18, -39, 34, -23, 2, 25, -72, 0, 19, -19, -13, -19, 6, 58, 5, -13, 2, 8, -9, -6, -1, -6, -36, -59, -32, -35, 62, -24, -24, -14, -7, 46, -54, -24, -57, 21, -5, -1, -4, -39, -19, -10, -35, 12, -12, 33, 39, -30, -32, -9, 13, 31, -16, 35, 13, 27, 1, 61, -8, 26, -8, -41, -17, -4, 52, 60, 49, 35, -51, 1, 34, -37, -16, 19, 1, -23, 9, 34, 63, -3, -90, 58, 38, 39, -25, 14, -24, -45, -17, 11, -14, -32, -5, -21, -23, -22, 28, 16, 36, -13, -36, 30, 8, -22, 29, 32, 23, 22, -9, 23, -32, -40, 46, -21, -16, 13, -3, -24, 19, 23, 59, -27, 2, -27, -51, 11, -12, 21, -19, 21, 23, -39, -23, 2, 23, 4, 0, -39, 2, -26, -19, -18, -13, -16, -29, 11, -80, -38, -35, -16, -42, -60, -40, 36, -10, -33, -5, 6, -11, -32, 18, 64, -37, -53, 15, 52, -18, -11, -4, 21, 4, 42, 61, 41, -30, -31, -52, -41, -49, -103, 9, 45, -11, 8, -10, -7, -38, -6, 61, 94, 35, 3, 30, -41, 46, 45, -2, -24, 43, 37, 36, 21, -23, 22, -4, -10, -37, -56, -29, 0, -69, 14, -38, -63, 15, -32, -40, 23, 15, 8, -30, -20, -22, -84, -23, -42, 42, 13, -6, -35, 31, -41, 43, 42, 34, 28, -31, 32, 32, 36, 20, 47, -20, -33, 35, 42, -19, 10, -37, 52, 24, -26, -30, -13, 36, 8, 19, 40, 16, 7, -9, 4, 51, 2, -15, -12, -5, 3, 13, 6, 37, -1, -55, -45, 28, 43, -37, 5, 34, -8, -14, 7, 39, -4, -29, -1, -9, -51, -15, 2, 4, -23, 33, 27, 16, 28, -37, 17, -56, 8, -9, -15, 10, 42, -6, -5, 5, -21, 62, -29, -52, 21, 58, 16, 39, 27, -3, -32, -25, -14, 48, 1, 18, 31, -27, -52, -18, 11, 32, -45, -43, 40, -13, -4, -17, 4, -10, 7, -15, 25, -24, 14, 27, -15, -12, 9, 22, 32, -43, 25, 14, 17, 29, 14, 21, 41, -16, -39, 6, 39, -7, -17, -31, 31, 6, 37, -45, 9, 9, -10, -19, -24, -20, -2, -21, 22, -12, -40, 21, -5, 15, 40, 1, 2, 41, -25, -18, 
  20, 62, 29, -8, -39, 55, 13, -16, 5, 20, 10, 42, 49, -17, 13, -17, 31, 16, 73, 52, 62, 29, 27, 1, 0, 6, 3, -15, 44, -3, 69, -33, 16, 16, 2, 37, -23, 47, -11, 43, 24, -11, -38, -10, -19, 30, -8, -2, -10, 26, -25, -32, 53, -14, 43, 73, 54, 49, 2, -6, 42, 6, 54, 2, 25, -16, 42, 27, 23, 7, -7, -2, 5, -39, -30, -60, -54, -27, -14, 43, -18, -23, -45, -26, 35, 7, -5, 21, 49, 33, 3, -34, -31, 12, 39, 2, 34, -8, 9, -20, -30, -33, -44, -12, -12, 26, -20, -11, 9, -35, -51, 11, -26, -5, 18, 36, 25, -16, 26, 3, 47, 42, 12, -11, 37, -24, 26, 69, -30, 45, -22, 47, -30, 0, -43, -23, -54, 33, 19, 27, 16, 1, 16, -36, -35, 2, -1, -60, -45, -17, 52, 41, -6, -25, -27, 30, -13, -10, 38, -11, 24, 0, -2, -27, -4, -21, -23, 20, 14, 4, 33, -6, 12, 34, 53, 6, 50, -12, -56, 12, -53, -23, -23, 3, 18, 22, -28, -22, -34, 22, 12, 17, 15, 35, -37, 24, 21, 23, -39, 28, 59, 33, 4, -13, 8, -12, 1, -40, 16, 14, 56, -30, -37, -17, 44, 12, 47, -41, -43, 19, 44, 21, 3, -3, -3, -44, -35, -52, 10, -31, 6, -16, -25, -44, -5, -26, -6, 4, 17, 0, -23, 2, 53, 8, 34, -36, -8, 1, 22, 10, -8, -49, 33, 59, -11, 25, -40, 9, 33, 19, 33, 29, -72, -22, 33, 14, 14, -10, -24, 18, 77, 35, 47, 47, 42, 13, -40, 55, -22, -5, -12, 46, -17, -9, 28, 27, 18, 9, 5, -31, 9, -10, 42, 46, 5, 49, 38, -24, -58, 25, 5, 12, 8, -14, -38, -26, -53, 21, -40, -55, -27, -13, 36, 57, 12, 25, -26, -35, -26, -58, 36, -16, 18, -8, -17, 6, -41, -3, -9, -35, 42, 4, 9, 14, -16, 6, 33, 2, -17, 1, 49, -13, -7, -7, 54, 6, -43, 26, -4, 22, 5, 6, 5, -31, 34, 17, -28, -27, -35, -37, 51, 8, -14, 14, -1, 31, 39, 2, 21, 11, -39, 9, -5, -10, -33, 23, 1, 24, -17, -25, 35, -59, 24, -45, -8, -43, 16, -59, -2, -41, -16, -65, 37, -18, -16, -10, 23, -30, -21, 14, -39, 49, 1, -29, -45, -3, 42, -37, 40, -24, -7, -24, -51, 27, -14, -34, -39, -9, 56, 2, 1, 5, -27, 53, 21, 30, -73, 22, 34, 40, 22, -36, 4, -41, 37, 21, 73, 12, -15, 62, 40, -37, -26, 17, 4, 15, 16, 55, 11, 76, -14, 4, 3, -18, -15, 3, 53, 35, -2, 1, -33, -40, 12, 13, 24, -23, 24, -11, 40, -21, -5, -6, -32, -30, 4, 7, -16, -25, -23, 3, -15, -29, -3, 7, -64, -27, -24, 0, -40, -14, -30, -53, -57, 27, -20, -38, 1, 18, -6, 11, -28, -29, -22, 22, -13, 35, 57, -38, -41, -7, 40, 51, -11, -21, 29, 32, -17, -48, -24, 36, 26, 8, -1, -11, 24, -40, 20, 24, 13, 38, 19, 22, 13, 8, -12, 47, 35, -44, -22, -53, -52, -27, 18, 50, 5, 25, -32, 16, 32, 18, 13, -16, 27, -1, 9, 0, -3, -26, -9, 27, -15, 2, 16, -34, -17, -9, -38, 42, -12, 17, -37, -2, -21, 12, 36, 58, 24, -35, -18, -30, 48, 53, -4, -14, 41, -39, -33, -17, -9, 16, -11, -49, -11, 32, -35, 4, 37, -41, 41, 8, 68, 38, 25, 37, 35, 61, 53, 17, 63, 53, 17, -32, 21, 15, 29, 31, -46, -32, 9, 27, -24, -24, -36, -39, -20, 20, 28, -4, -59, -23, -15, -12, 28, -2, 2, -14, 4, 43, 2, 21, 41, -12, -8, -16, 25, 15, 44, 40, -29, -13, -18, 28, 33, -30, 34, 22, -6, 35, 14, -5, 41, -18, 1, 55, 30, 52, -28, 42, -19, 42, -15, 9, 14, 50, -14, 12, 60, 31, 23, -53, -34, 18, 3, 41, 9, 33, -22, -18, 40, -37, -41, 27, 4, 62, -21, 1, -54, 24, 25, -50, -61, -41, -19, -29, 12, 45, 42, 31, -46, -29, -25, -49, -23, 16, 2, -4, -46, 46, 22, 35, 29, -19, -33, 16, -49, 18, -21, 17, -44, -32, -18, 11, 43, -9, 27, 52, 22, -15, -11, 49, 26, -8, 35, -36, -21, 53, 48, -4, -9, 35, 45, 13, 27, 8, 25, 30, 17, -5, 31, -38, 20, -10, 20, 29, -34, -53, 29, -41, -7, 12, 8, 26, -49, 35, -37, 1, -31, -2, -4, -17, -48, -40, -27, 
  -7, 23, -29, 28, -12, -52, -104, -37, -37, -84, -52, -42, -62, -33, -58, 9, -28, -3, 20, -22, 19, 62, 37, 61, 60, 46, 30, 39, 16, 3, -49, -46, -72, -36, -8, -29, 0, 8, -27, -16, -10, 11, -19, 13, 8, -23, 41, 23, 13, -58, 10, 15, -62, -48, -33, -6, -14, -34, -76, -31, -69, -57, -51, -1, -43, -46, -62, -21, -50, 1, -39, -6, 14, -28, -19, -33, 38, -42, -72, 13, 23, 47, -53, -64, -62, 11, -44, -37, 3, -1, 33, 17, -6, -15, -6, 44, 9, -24, -22, -12, 43, -27, -19, 6, 16, 11, -39, -12, 20, 14, 31, -12, -15, -18, 47, 24, 37, 30, 11, -15, 36, -48, -34, 41, -22, 16, 30, -26, -36, 7, -46, -49, -46, -30, -43, 21, 39, -8, 13, -36, 36, -21, 25, 11, 12, 24, 55, 18, -44, -8, -48, -35, 0, -14, 49, -28, -29, 34, -40, -28, -8, -30, 28, 16, 3, -45, -24, -29, -27, -50, 8, 37, 41, -2, -48, -29, 4, -32, 38, -12, -51, -2, 35, 45, 28, -34, 38, 28, -12, -3, 20, -4, -13, 37, 2, -48, -27, -3, -37, -23, 14, 17, -27, -6, 24, 22, 43, -33, 38, 21, 12, 14, 31, 40, 3, -2, 37, 52, 53, 13, 22, 34, -33, -43, -27, -25, -1, -17, -7, 4, -47, -21, -33, -5, -35, -15, 30, -63, -34, -70, -59, -23, 6, -50, 8, 2, -24, -17, 17, 38, -18, 16, -13, -24, 29, -34, -22, 40, 40, -26, 32, 64, -6, -20, 38, -27, -80, -18, -39, -40, -76, -79, -47, -73, -43, -85, -10, -42, -23, -8, -113, -72, -55, -30, -26, -61, -74, -36, -43, -14, 11, -31, -14, 14, -21, -33, -16, 11, 10, -6, 77, 9, 82, 46, 96, 50, 17, -10, 46, 71, 32, 43, 14, 66, 10, 4, 26, -4, 13, 29, 2, 17, 23, 51, 39, 37, 38, 33, 62, 49, -3, -7, 33, 15, 48, 60, 6, 27, 30, 26, 27, -22, -1, 12, -24, 28, 39, -10, -50, -61, -38, -52, 44, -7, -2, -24, -21, 2, -8, 7, 8, -7, 0, -4, 35, -6, 55, 54, 68, -2, 2, -16, 18, -13, 33, 80, 61, 15, 66, 43, 19, -2, -34, 7, 46, 5, -6, 49, -15, -5, 31, 43, -28, 6, 36, -4, 2, -6, -23, 69, 1, 55, 36, 16, -24, 8, 27, 32, 27, 10, 12, 0, 37, -2, 36, 4, 42, -43, -32, 61, 3, -34, -20, -37, 34, 44, 28, -26, -6, -30, 4, -26, -39, -48, -11, -33, 27, 47, 29, -8, -17, -60, -43, 24, -29, -22, 4, -5, -48, -17, -21, 5, -7, 5, 22, 23, -8, -5, -29, 13, -62, -37, 32, -3, 27, 35, -35, 5, -37, -36, 30, -4, -33, -55, 14, 2, 33, -5, 32, -7, -8, 19, 39, -23, -21, -45, -19, 3, -23, 7, 23, 35, -34, -32, -59, 4, 7, -20, 25, 10, -43, -45, -62, -20, -37, 0, 9, 18, -23, -39, -15, -3, -35, 17, -19, 22, 40, 0, 17, 27, -21, -55, 0, -65, 40, 67, 4, -26, -28, 61, -20, 35, 10, 41, -27, 15, 69, 65, 33, 70, -6, 1, -2, 13, 23, -5, 6, -39, 39, 11, -1, 30, -11, -10, 34, 32, 39, -41, 23, 22, -6, -3, 4, 10, 12, 34, 8, -13, 7, 49, -29, -15, -28, -40, -31, -44, -26, 55, 18, 13, 27, -20, -39, -17, 3, -11, -32, 5, -27, -55, -40, 36, 14, -3, -25, -42, 22, -19, -5, -8, -11, 37, 10, 7, 0, 17, -3, -6, 12, -30, -33, -42, 16, 7, -22, -52, -33, -12, -47, -34, 9, -38, 44, 3, 3, -12, -60, -50, -63, -27, -43, -14, -24, -27, -61, 11, -5, 19, 9, 20, -31, -7, 11, -27, -38, -66, -56, -21, -7, -31, -41, 2, -10, -47, -23, -15, 17, -52, 10, 27, -12, -5, 0, -15, 19, 49, 2, 21, -10, 27, -35, -27, 16, -4, -65, -33, -45, 5, -14, 20, 38, -14, 5, 23, -40, 25, -20, 0, 0, -39, -41, 7, 4, 20, 13, -2, -9, 11, -20, -3, 2, -37, -44, 19, -55, 12, 11, -25, 0, -23, 21, 39, -7, -24, -25, 16, 34, 15, 13, 31, 2, 25, -5, -24, 25, -40, -41, 13, 29, -17, -23, 21, 28, -48, 12, 24, -28, 20, 54, -7, -6, -46, 47, 5, -20, 37, 43, -36, 14, 3, 4, -63, -2, -26, 14, 0, -8, -43, -50, -28, 15, -24, 34, -13, 40, -26, -38, -3, 27, 47, 27, 34, -5, 40, -30, -35, 21, 19, 0, -13, 22, 41, -41, 
  53, 14, 18, -34, -41, -64, -11, -25, -17, -3, -36, 0, 11, -32, -3, -39, -14, -26, 0, 1, -14, 37, -29, 60, 66, 21, 18, 12, 46, 35, -39, -35, -59, -24, 32, 27, -8, -33, -30, 12, 11, 0, 27, 0, -1, 51, 32, -24, 19, 11, -10, -38, -24, -14, 15, 16, -72, -52, -3, -22, 0, 4, 25, 26, -6, -61, -44, 9, 14, -31, 19, -11, -25, -35, -7, 45, 25, -25, 12, 27, -27, -37, 6, -38, -35, 14, -15, 15, -34, -36, -10, 32, 6, -32, 0, 15, -16, 31, -18, 34, 47, 40, 45, 46, 30, -23, 2, -30, 22, 12, 8, 7, 37, 44, -21, 24, -6, 32, -9, -5, -3, -36, -34, -31, 43, 30, -18, 15, 30, -19, 29, -26, -44, -41, 41, 34, 8, -39, 20, 21, -8, -18, -1, 20, -13, -42, 19, 18, 32, -13, 6, 32, 28, 48, -23, -26, -28, -6, -9, 4, 51, -41, 26, 7, -3, -12, -15, -36, -14, -2, 30, -9, -11, -35, 1, -2, -3, -13, 9, 27, 8, -42, 11, -42, -3, 23, -51, 7, 28, 7, -14, -35, 21, -45, 12, 21, -27, -53, -44, -8, -11, 25, 5, -22, -13, 6, 13, 16, 7, -22, -31, -17, 51, 30, 9, -32, -45, 37, 7, -15, -4, 3, -9, -39, -29, 0, 33, 4, -22, 24, -27, -49, -26, 13, -40, 25, 3, -60, -21, -5, -43, -14, -52, -26, 26, -8, -42, 17, -18, 37, 21, -2, -30, 20, -20, 23, -11, -19, -35, -10, -45, -16, -13, 38, 18, 6, -52, -22, -47, -51, 3, 1, -82, -38, -6, -22, -15, -24, -2, -34, -33, -11, -39, -11, -19, -64, -52, -2, 29, 12, -47, -13, -32, -53, -46, 17, 4, 66, 49, 45, -20, 29, 4, 54, 22, 44, 55, -19, 29, 46, 64, 2, -9, 12, 28, -1, -5, 38, 35, 21, 9, 15, -9, 43, 41, 49, -15, 24, 2, 43, -42, 9, -26, -15, -10, 26, -11, -15, 15, 45, 0, -2, -26, -32, 11, 1, 35, 45, 41, 25, -29, 21, 16, -4, 67, 24, -2, 1, 0, 3, 11, -14, -34, 61, -14, -10, -19, -14, -11, -31, 11, 1, 25, 8, 22, 52, 38, -24, -13, -17, -6, -21, 24, 24, 57, 8, -11, 19, 14, 61, 16, 34, -49, 4, -11, 45, 5, 10, 13, 18, 17, -8, 26, -14, -8, -25, 19, 27, -8, -22, -17, -12, -15, -15, 56, -1, 55, 13, 22, -53, 33, 30, -52, -19, 5, 61, 17, 8, -1, -35, 18, -7, 23, -38, 7, -33, -22, 44, -24, -36, 9, 8, -33, 13, 27, 35, 28, -17, -13, -4, -17, 21, -53, 33, -28, -23, -6, -69, -7, 2, -6, 7, 7, 15, -43, -61, 18, -49, -34, -46, 16, 14, 41, -24, 51, -1, 12, -45, 37, 66, 18, 28, -17, 20, -13, 28, 42, 40, -19, 10, 37, 48, -39, 16, -13, -32, 6, 9, -9, -52, -4, 11, -63, 16, 5, -25, -38, -61, 4, -23, 25, -48, -54, -1, 10, -44, -27, 16, 31, 32, -42, -30, 38, 23, 18, 0, 11, -28, -4, 42, 32, 12, 34, -35, 16, -13, -21, 36, 29, -31, -24, -4, 36, 15, -28, -76, -16, -34, 3, 16, -1, -22, 26, -6, -48, -43, -14, 12, -9, -54, 1, -41, -29, -19, 23, 5, 14, 2, 54, 33, -11, 15, -12, -25, 36, 1, -44, 0, -46, 11, 50, 30, -2, 25, 29, 21, 46, 27, 18, -55, -7, -28, -22, -39, 23, 1, -20, 33, -42, -16, -1, -11, -40, 28, 9, -53, -39, -39, 35, 14, -9, 2, -24, 25, 30, -35, -5, -6, -22, 25, 1, 64, 30, 21, -14, 9, 13, 43, -6, 22, 37, -4, 2, 1, -18, 16, 43, 37, 16, 9, -18, -61, -38, 15, 32, 11, 31, -33, 33, -2, -7, -3, 33, 29, 60, 39, -18, 64, 61, 63, -20, 5, -8, 3, -22, 6, 9, -16, 5, 16, -34, -16, -26, -14, -44, -68, 29, -40, -16, -9, 1, 42, 21, -43, -15, 32, -18, 14, 3, 17, 39, 37, -5, 15, 8, 71, 10, -12, 6, -27, 1, -29, 8, -22, 25, 17, -16, -9, 1, 54, -24, -15, -23, -10, -14, 50, -17, -14, -2, -18, 22, 10, 3, -22, 1, 46, 33, -42, -24, 26, 10, -5, 2, 29, 15, -4, -35, -32, 0, -59, -65, 9, 45, 24, -18, -20, 29, 8, -32, 35, -15, -5, 13, -31, -22, -38, 25, -35, -1, 10, 20, -24, -7, -21, -30, -9, 36, -15, 18, 22, -17, 11, 56, 36, 31, -12, -13, 8, 7, 23, -44, 48, 34, 
  3, 49, 33, -15, -28, -20, 59, -6, 38, -18, 33, 69, 59, 34, -23, 17, -4, 16, 67, 46, 25, 8, 48, 12, 41, 45, 36, 40, 56, 33, 14, 0, 14, 10, 45, 23, -11, 22, 17, 41, 47, 61, 75, 35, 17, 17, 32, 45, -10, 12, -10, 48, 39, 29, 51, 49, 48, 15, 25, -15, 52, 44, 39, 35, 64, 62, 59, 10, 15, 33, -3, 27, -5, -12, 61, 59, 63, 65, 55, 51, 45, 55, -22, -4, -14, 5, 9, 58, 41, 74, 60, -9, -14, -12, 21, 26, 34, 42, 10, 19, 24, 25, 55, 56, 49, 18, 1, 55, 37, -22, -10, 10, 17, 33, -24, -15, -29, 19, 40, 26, 70, 66, 24, 18, 22, 9, -11, -21, 54, 53, -6, 46, 34, -1, -37, 19, -18, 50, -2, 35, 1, 21, -11, 25, 48, -26, 8, -22, -25, 13, 60, -10, 7, 25, 19, 31, 48, 78, 18, 4, 66, 37, 42, 56, -3, 49, 2, -16, 41, 25, 49, 41, 74, 16, 71, 28, 70, 74, 5, 38, -11, 46, 35, 41, -30, 15, 8, 27, 55, 30, -29, -7, 11, -47, -25, 29, 33, 47, -23, -15, 6, -29, 36, -30, -39, 13, -36, -31, 1, -11, -14, 12, -16, 23, 9, -9, 1, 7, 20, 40, 11, 25, -22, -2, 41, 23, 25, 6, 29, -31, -29, -33, 9, 12, 34, -4, 17, 38, 1, -13, 0, -38, -27, 0, -33, -20, 3, -1, -22, 14, 28, -38, -23, -42, -54, -36, 7, 9, 33, -13, -27, -18, -5, -16, -12, -23, 8, 13, -16, 26, -48, -17, 49, 2, -20, -20, 12, 4, 48, 35, 22, -7, 22, 10, 20, -25, -37, -19, 28, -14, -28, -38, -47, -11, -24, -22, 3, -4, -11, 1, -15, -19, -21, 48, 26, 17, -27, -65, -15, -31, -24, 32, -25, -13, -22, 36, 4, 17, -7, 52, 3, 37, 36, 1, -24, 6, 47, 17, -49, -14, -30, 7, 51, -6, 26, 13, 23, 43, 64, -8, -11, 40, 12, 43, 80, 75, 6, 35, 65, 47, 31, 11, -10, 24, -13, 11, 46, 33, 14, 27, 46, 7, 53, 8, 35, 47, -11, 49, 7, 4, 26, 70, 33, 84, 82, 32, 25, 40, 87, 37, 47, 35, 29, 36, 5, 12, 16, 22, -22, -4, -13, -9, 87, 58, 57, 33, 11, -24, 15, -20, 61, 56, 5, 30, -10, -17, -9, -22, -33, 33, -8, -19, 47, 50, -4, -11, 35, -14, 29, 24, 16, 27, 1, 7, -2, -41, -19, 38, -1, -47, 23, -61, -21, -22, -1, -37, 34, 39, 34, -1, -1, -2, -51, 29, 24, -34, 21, -7, -8, -2, 27, 9, -4, 17, 54, 6, 29, 59, 56, 30, -18, 37, -34, -36, -13, 78, 44, -7, 52, -1, 22, -41, -38, 45, 29, -18, -25, -4, -49, 18, 43, 11, -11, 14, 45, -27, -30, 9, -58, -2, 6, -15, 41, -15, 30, 11, -23, 32, 10, 29, 0, -19, -40, -50, -62, -40, 4, -14, -32, -47, -42, 25, -47, -64, -21, -46, 4, 9, -6, 4, -74, -104, 33, -44, -45, 8, -2, -26, 11, -13, -48, -25, -1, 27, -18, 22, -31, 38, -34, -33, -18, 24, -16, -47, -9, -48, -25, -13, 7, -20, 7, 29, 36, -39, 39, 0, 37, -6, -36, -57, 5, 19, 0, -5, -39, -63, -8, 22, -32, -41, -77, -34, 14, -58, -41, 16, -37, -45, -44, -64, -73, -95, -43, -121, -69, -16, -94, -62, -70, -43, -37, -7, -37, -85, -55, -20, -75, -103, -77, -72, -49, -25, -81, -27, -28, -26, -41, -50, -57, -87, 13, 9, -49, -7, -51, -26, 21, -38, 20, -21, -35, -29, -84, -89, -90, -11, -38, -49, -76, -4, -1, -44, -32, 1, 12, -102, -82, -72, -1, -50, -31, -89, -88, -8, -2, -4, -56, 4, -59, -13, -21, -52, -101, -61, 2, 3, -75, -96, -116, -69, -40, -80, -48, -26, 4, -24, -70, -17, -31, -2, -74, -65, 0, -12, -5, -49, -34, -6, 7, -5, -65, -6, 15, -48, -42, -5, 7, -8, -5, -58, -59, 13, 41, 28, 17, -15, -25, -20, -5, -82, 13, -19, 24, -14, 21, -11, -54, -25, -49, 26, -29, 0, 26, -3, -28, -7, 13, -5, -11, 11, -7, -12, -29, 35, -3, 22, -30, -9, 11, -25, -19, -56, 50, 51, -1, -12, 8, 36, -3, 33, 7, 43, 12, -10, 8, 40, -39, 3, 14, -15, 2, 15, -34, 37, -23, -53, -48, 1, -10, 19, -36, -25, 14, -79, -74, 34, -48, -20, -3, 11, 7, -32, -29, -23, 23, -44, -19, -61, -17, -48, -8, 5, -55, 
  -27, -17, -7, -14, 27, -11, -10, -34, -29, 53, -9, -38, 19, 4, -4, 28, -2, 3, 31, 19, 41, 5, -56, 1, -5, -46, -34, -47, 43, 10, 9, 16, -24, 53, 40, 59, 22, -30, -39, -7, 33, 6, -44, -36, -53, -12, 52, 43, -4, 20, 8, -61, -34, 15, -39, -24, -11, 9, -22, 1, -18, -39, -34, 38, 11, 15, 10, -15, -26, 41, 9, -7, 2, 0, -26, -68, -33, 25, -23, -37, 2, 7, 15, 19, 37, 24, -38, -17, 36, 41, -28, 52, 30, 31, -24, -40, 6, -9, 17, -8, -23, 30, 3, -5, -6, -30, -23, 5, 8, -26, -33, -29, -30, -41, -36, 12, -5, -5, 16, 41, 36, 2, 25, -20, 33, 40, -25, 40, -24, 33, 0, 37, 64, 22, 22, 27, -2, -18, 24, 16, -10, 10, 32, -10, -8, -3, -62, -4, -27, -52, 3, -36, -7, -1, -16, 32, -22, 41, -16, -32, 30, -25, -77, -26, -45, -37, 1, 35, -31, -36, 29, -33, -38, 11, 24, 32, -18, 3, -29, -49, -57, -31, -21, 8, 32, -52, -40, -43, -19, -39, -23, 32, 16, 35, -24, 40, 4, 38, -42, -39, 24, 30, -31, 15, -19, -50, -2, 45, 6, 1, 43, -34, -19, 31, 54, 15, 21, -34, -17, -18, 28, 34, -12, -1, 56, 38, 25, -19, -47, 31, 6, -16, 22, 19, -31, -50, 10, 6, -35, 4, -40, 27, 46, -39, -33, 0, 10, -50, -48, 16, -52, 5, -45, 48, 34, -32, -27, 38, -3, 32, 31, 14, 4, 22, -1, -28, 5, -24, 2, -23, 70, 53, -7, -32, -12, 38, -2, 0, 5, -29, 13, -5, 28, -6, -40, -19, -21, 4, 51, -39, -4, -14, 5, 0, 47, -15, 23, -16, 15, -32, 57, 42, 41, 21, 2, -8, -37, -2, 31, 16, 18, 62, 30, 59, 22, 89, 27, 9, -24, 7, -34, -14, -14, 11, -42, 3, 22, -10, -74, -31, -6, 21, -68, 15, 26, -19, 40, 47, 66, -11, 15, -6, 63, -28, 8, -19, 17, -47, -45, 18, 3, 10, 10, -7, -19, 10, 8, -3, 32, -28, 22, -36, -10, 43, -4, 8, 7, 59, 11, -54, -34, 9, -34, 5, -20, -14, -22, 0, 66, 19, -12, 12, 16, 8, -35, -7, -19, -70, -42, 6, -54, -2, 18, 59, -27, -16, -15, 16, -36, -51, -16, 13, 13, -27, 17, 51, 45, -42, -2, 16, 22, 13, -2, 21, -23, -32, -1, 39, 49, -4, 13, -18, -13, 2, 48, 36, -23, -2, 79, 44, 24, 6, -23, 26, 8, -36, -5, 33, -1, 65, -18, -62, -50, -16, 59, 35, -21, -1, 24, 43, -6, -38, -50, -16, -27, -18, 16, -42, -37, -59, -38, -28, -48, 9, -12, 52, 21, -37, 22, 34, -10, -11, 6, 8, -35, 22, 57, -21, -19, -53, 21, -35, -7, 12, -48, 5, -46, 16, 2, -46, 28, 11, -52, -11, -35, -19, 55, 15, -31, -20, -43, 7, 38, 34, -16, -14, -21, -5, -5, -1, 32, 24, 35, -32, 20, 16, 20, 27, -48, 12, 48, 10, 29, -55, 4, 34, 29, 25, -38, 31, 38, -17, 26, -19, -18, 19, 22, -8, 42, 11, -20, -51, 29, 64, 27, 11, -32, -22, -2, 13, 44, -22, 19, -60, 46, -20, -22, 10, 43, 28, -42, -7, 34, -52, -68, 6, -17, -50, -38, -44, -49, -41, -30, -5, 41, 72, 26, 28, -4, -28, -21, 2, 2, 12, 14, -13, -47, 12, -22, -23, -76, -72, -24, 3, -66, 9, -7, 27, 1, 21, -20, 45, -34, -3, -24, 50, 79, 14, -13, 19, 1, -9, -37, -4, -16, 28, 12, 0, 59, -9, -12, -2, 12, -10, 27, -9, 36, 39, -3, 30, -5, 52, -17, -28, -36, -33, 15, -30, -21, 27, -33, -26, 16, 32, -36, 3, 9, 0, 15, -26, -37, 30, -47, 6, -42, -14, -3, 3, -53, -39, 37, -5, 36, -16, 43, -46, 14, -22, -9, 25, -47, -38, 42, 19, -41, 30, -2, 1, 37, 6, 27, -20, -10, -5, -16, -3, -27, 18, 2, -21, -4, 21, 32, -14, -33, -48, -36, 49, -19, -48, -22, -30, -22, -9, -20, 17, 44, -34, -31, -43, -8, -51, -11, -21, 17, -18, -8, 14, 26, 19, -12, 4, -14, 18, -15, -52, -20, -45, -22, -16, -18, -47, 11, 66, 28, 43, 49, 4, -6, -2, 22, 6, 2, 5, 50, -36, 23, 25, 6, 14, 18, 29, -19, 33, 9, 5, -28, -25, -2, -9, 51, 37, 51, 42, -4, -27, 11, -26, 8, -14, 18, 0, 1, 48, -40, 46, -6, 24, -39, -10, 47, -5, 18, 
  20, -15, -23, 4, 43, 56, -22, 58, 22, 60, 45, 27, 57, 41, 36, 8, -17, 17, 10, 38, 30, 5, 18, 10, -1, -38, -34, 51, 41, 49, 58, -7, -2, -14, 9, 30, 9, -1, 40, 20, 74, 3, 25, -38, 52, -3, 32, 62, 43, 12, -2, -10, -55, -45, 14, -19, -11, -6, -13, -38, -35, -46, -16, -45, 0, -1, 10, 10, -9, 33, -34, -10, 4, -37, -12, -68, -50, -4, 55, -14, -18, 2, -38, -33, 18, 8, 31, 58, 27, -39, 0, 19, 6, 69, -13, -18, -24, 52, 23, -1, 32, 57, 13, -73, -48, 19, -32, -41, -31, -5, 6, -67, -66, 9, -16, 51, 55, -6, 18, -5, 21, -12, -15, -10, 57, 32, -13, 58, 28, 59, -14, -14, 41, 22, -20, -22, 15, -31, -17, 42, 45, 37, 76, -4, 33, 76, 47, -18, 38, 31, -31, -33, -27, -39, -29, 41, 1, 20, 21, -35, -19, 2, -13, 4, 4, 8, 37, -22, -26, -5, 27, -29, 35, 15, -21, -62, -28, 22, -19, -12, -1, -50, -35, 12, 19, 2, -48, 7, 61, 43, 1, -33, 45, 49, -18, 0, -34, 24, 29, -38, 11, 27, 11, 6, 16, -2, -1, -35, -42, 20, 23, 37, 9, -27, -11, 23, -24, -25, -19, 10, -29, 40, 23, 39, -14, 11, -40, 16, 20, 26, -51, -18, 21, 3, -37, -66, -36, -40, 1, -10, -30, -42, -51, 9, -27, 2, -46, -30, -35, 26, 12, -23, -24, 41, -22, -18, -2, -40, -8, -12, -14, 29, -64, 6, -19, 11, -19, 21, 46, -23, 10, 24, -30, 3, 10, -19, -29, -47, -42, -70, 15, 20, -42, -15, -12, -19, -42, -10, 38, -15, -24, -59, -24, 19, 4, 27, 1, 11, 21, -8, 1, -5, -52, 28, -6, -25, -16, -1, -3, 3, -13, 72, -4, 61, 22, 26, 55, 9, -51, -58, -56, -47, -81, -4, -23, -25, -47, -65, -42, -35, -12, -63, -40, -44, -37, -37, 19, 0, 21, 21, 12, 20, 14, 25, -23, -33, -26, -58, -39, -17, 31, -25, 18, -29, -36, -35, 59, 4, -23, -62, -8, -36, 19, 71, -37, -34, 67, 9, -2, -50, 46, 10, 0, -59, -36, -38, 46, 68, 14, 2, -23, -24, 29, -38, -6, -5, 25, -32, -10, -6, -85, -25, 4, 26, -9, -68, -45, -10, -1, -17, -68, -11, -22, 15, -37, 5, -2, 14, 7, 15, -80, -53, 3, 30, -5, 11, 12, 15, 43, 0, -8, -41, -24, 1, -33, 21, -65, -13, 78, -15, -14, -75, -120, -79, -70, -39, -7, -38, -11, 41, 8, -65, -77, -53, 16, -38, 8, 3, 19, -51, 38, 32, -53, -37, -14, 0, 5, -72, 17, -23, -21, 20, 10, 8, 41, 40, -45, -24, 65, -1, 36, 18, -27, -62, -92, -23, 29, 30, -16, 6, -25, -60, -73, 5, -3, 28, 51, -16, 1, -45, -53, -9, 5, -19, -4, -12, 8, 19, -7, 7, 18, 56, 40, 73, 6, -10, -31, -16, 25, 40, 9, 45, -46, 33, -28, -25, 1, -41, -16, 6, 60, 19, -15, 34, 8, 24, -23, -27, -33, -46, -1, 11, -25, -30, 5, -30, 29, -18, -7, -21, -35, -65, -57, 11, 14, -41, -14, -45, -1, 29, 74, 43, 55, -2, -23, 11, 25, -25, 8, 20, -41, -22, 21, -25, -45, -55, -18, -44, -21, -89, -87, -82, -83, -68, -13, 71, 42, 9, -13, -12, -42, 51, 29, 3, 11, -42, -21, -50, 10, 1, -34, -80, 11, -14, -57, -80, -38, -20, 7, 25, 32, -7, 5, 1, 1, 31, 3, 46, 13, 22, -88, -9, -58, -33, -79, -48, -36, 1, 8, 34, 51, 1, -5, 12, -6, 21, -21, -32, -9, -16, -34, 2, -2, 28, -41, -64, -57, -21, 1, -23, 3, -7, 22, 0, 13, 16, -45, 19, 62, 39, -34, -26, -54, 18, 27, 61, 17, -3, 25, -2, 51, -38, -19, 13, 49, 25, 26, 3, -3, 8, -28, 35, 71, -18, -54, 22, 42, 6, -20, -17, 26, -1, 35, -15, 44, 21, 50, 60, 4, -11, -1, 7, 39, -8, -24, 4, 65, 54, -21, 10, -24, -17, -6, 0, -27, -27, -9, 33, 30, -4, 23, -25, -36, -10, -11, 4, -6, -3, -8, -42, 19, 48, 28, -38, -26, -15, 4, 6, -34, -10, 15, -9, 34, -4, 49, -14, -2, 17, -33, -21, 18, 56, 24, 18, -41, 17, 45, 41, -29, -52, 14, 17, 20, 18, 70, -16, 16, 18, -22, -71, -49, -37, 44, -32, -45, 22, -11, -21, -46, -34, 7, 7, -27, 24, 13, -37, 3, -47, -11, -57, -10, 28, -37, 
  44, -96, -38, 10, 7, -34, -26, 12, 6, -30, 9, -31, -20, 42, -56, -29, -38, 7, 21, -31, 22, 68, 11, 58, -39, -29, 3, -7, 54, -15, 51, -33, -15, 38, -13, -40, -18, 23, 47, -27, -37, 62, 13, 82, 11, 31, 9, 11, -12, -3, 5, 47, 49, 38, 13, 18, 83, 32, 83, 12, 21, 48, 14, 62, 13, 43, 60, 65, 24, 42, 9, -52, 86, 46, 85, 43, 6, 25, 21, 24, 40, 20, -6, -1, 19, -18, 51, 21, -21, 25, 9, 37, 3, 11, -50, -7, 31, 27, 15, 23, -40, 72, -1, 44, -41, -43, 27, -44, -60, -69, -43, 16, 79, 54, -33, 13, 37, -28, 36, 21, 9, 29, 28, -10, -25, -28, 12, 59, 55, -13, 10, 3, 31, 30, 65, 61, 78, 54, -6, 62, -3, 20, -50, -73, -17, 5, -5, -47, -26, -3, -48, -57, 22, 20, -10, -30, -33, -19, -60, -83, -5, 25, -4, -14, -39, -35, 4, 0, 5, -53, 20, 20, -22, -29, -31, 30, 48, 22, -10, -13, -59, -36, -44, -12, 10, 12, 10, 17, 39, 9, -46, 8, -22, 34, -1, 1, -21, 18, 19, 12, 26, -63, 14, -23, -36, 44, -19, -14, -2, 21, 4, 22, -15, -15, -30, 17, -37, -48, -34, 19, 15, 57, -8, 40, 44, 45, -15, -14, -10, -13, 44, 47, -6, 18, -7, -39, -28, 7, -75, -29, -11, 26, 36, -26, -5, -20, -30, 10, 9, -17, -15, -38, -33, 1, -20, -80, -16, -51, -55, -26, -2, -33, 70, -22, -7, 4, -25, -37, -17, 12, 7, -48, 47, 55, 52, -21, 3, -18, 43, -9, -18, -26, -25, 28, 63, 21, -42, -18, -39, -41, -59, -43, -25, -45, -33, 7, 52, -19, -82, -40, 30, 62, 71, -62, -23, -37, 5, 19, -20, 30, 49, 20, 58, -14, -67, -12, 4, 41, -6, 35, 3, 70, -17, 2, -38, 38, 18, -20, 5, 43, 18, 5, -22, 4, 24, 13, -28, -16, -27, -39, 48, 21, -33, 51, 31, -7, -47, -76, -29, -5, 23, -13, -25, 1, -4, 60, 39, -17, -35, -16, 21, 29, -16, -46, -32, -12, 19, 38, -25, 36, -34, 40, 24, 10, 18, 1, 6, -4, 58, 14, 50, 18, -4, 9, 26, -16, -15, -19, -25, -25, -39, -12, -5, 49, 59, 61, 21, 21, 2, 31, 83, 77, 16, 22, 67, 35, -12, 8, 36, 6, 86, 63, 35, 67, 58, -32, -31, 40, -1, 19, -88, -29, -1, 56, 62, 33, 81, 85, 58, 65, -31, 19, 11, 28, 25, 19, 33, -14, 38, 2, 42, 16, 67, 57, 0, -3, 27, -9, -30, -3, -23, -43, -28, 68, 49, 40, 43, 7, -4, 3, -40, -7, 33, 7, 27, -12, -2, -51, -79, -22, -19, -25, -21, -36, 21, -61, -31, 69, 61, 30, 36, 8, -5, 5, 28, -30, -43, 7, 38, 23, -6, 16, -2, 6, -1, -16, 29, 19, -14, 9, -45, -17, -46, -74, -32, 20, 47, -23, -47, -1, 22, -11, 5, 1, 29, -33, 34, 53, 16, -15, -12, -64, 0, -6, 21, -7, -47, 29, 35, 4, -50, 30, -8, -50, -17, -19, 52, -2, 12, -33, 24, -36, 8, 31, -6, -40, 40, 14, 21, 23, -6, 3, -11, -26, 42, 28, 1, -22, 1, 37, -51, -26, 9, -26, -42, 39, -9, -40, -26, -5, -32, 12, -36, -36, -12, -15, -38, -13, 10, -5, 14, -21, 41, 18, -12, -33, -47, -20, -37, -42, 1, 3, 51, 51, -18, -9, 13, -39, -11, -37, -20, -11, 7, -15, -42, -21, 21, 20, 61, 42, 8, 40, -21, 26, 34, 44, 21, -22, 14, 14, 21, 35, 24, 15, 27, 47, -19, -18, 50, -10, -2, 47, 4, -11, 16, 15, 47, 57, 41, 22, -12, 18, 10, -35, 40, 40, 21, 44, -56, -13, -8, -34, -35, 33, 13, -5, -8, -30, 14, 4, 10, 12, 3, 12, 4, -5, 7, 43, 49, -27, -11, -10, -15, 18, 68, -9, -7, 39, 53, 2, -18, 8, -29, -4, 46, -4, 60, -2, 55, -11, 59, 25, 15, 16, -5, 25, 59, 7, 28, -21, 10, -38, 51, -15, 1, 52, -11, 10, -1, 6, -11, 43, 52, 23, -6, -53, -38, -51, -31, -35, 7, -23, -9, -27, 33, -21, 12, -32, -19, -7, -56, -9, -2, 29, 0, 20, 61, -9, 35, 11, 15, -7, 48, -3, 51, -18, 21, 42, 31, 16, -35, 31, -19, 25, 31, 10, -22, 13, 36, 28, -22, 21, 12, 72, 29, 2, 20, -34, -8, -3, 1, 28, -23, -41, 15, 37, 42, 25, -42, -54, -62, -76, 4, 
  14, 69, -15, -30, -23, 70, 45, 51, 46, 51, 26, 56, 12, 45, 57, 40, 19, 49, 38, 38, -33, 37, -28, 29, 14, -2, -33, -21, -2, -4, 30, 8, 19, 53, 14, 21, 0, -34, 16, 37, 28, -12, 28, -8, 45, -10, -26, 8, -24, 26, 16, 6, 50, 53, 29, -15, 54, 28, -20, 50, 14, -10, 33, 9, 42, 53, 31, 1, 30, 47, -25, 51, 47, 46, 25, 45, -7, 18, 51, 26, -27, -27, 9, 47, 46, 38, 17, 30, 33, 52, 7, 53, 18, 35, 49, 33, -29, 31, 30, 24, 42, 66, 73, 15, 52, -10, 13, 17, 49, -15, 15, -36, -40, 26, 49, -17, -11, -27, 13, 6, -20, 14, 2, -9, 26, -1, -13, -4, -7, -35, -5, -2, 14, 37, -27, -10, -17, -3, 17, 16, -6, 18, -16, -1, 39, 5, 32, -8, -11, -39, 18, -19, -28, 17, 12, -3, -34, 28, -26, -31, -18, 46, -37, 20, -3, -19, -36, 34, 35, 19, 11, 1, -6, -16, 31, 60, 14, -19, -34, -8, 48, -10, -24, -28, -12, 9, -15, -16, 4, -40, -24, 36, 28, -27, 24, -31, -26, -28, 19, 31, 54, 48, 10, -7, 42, 7, 23, 42, -12, -30, 12, -2, 5, 56, 10, 51, 42, 34, 18, -12, -6, -25, 17, 48, -2, 25, 40, 28, 6, 14, 19, 3, 52, -17, 4, -11, -9, 5, 39, 31, -10, 45, -35, 17, -34, 16, 23, -9, 31, 20, 3, -37, 15, 18, -53, -3, 33, 16, -32, -46, -34, -12, 36, 40, 26, -47, 36, 56, 11, 24, 1, 41, 27, 18, 29, 32, 41, 21, 22, 76, 53, 90, 15, 67, 10, 27, 15, 70, 35, 22, 90, 54, 42, 1, -17, -11, -31, -30, -2, 45, 40, 21, 68, -23, 36, -5, 19, 0, 7, 38, -31, -8, -9, 20, -16, -22, 44, -14, 40, 43, 24, 30, -16, -25, 27, 36, 24, -25, -28, 11, 32, 20, -11, 34, -4, -17, 36, 2, 80, 62, -2, 3, -48, -30, -1, -25, -9, -21, 6, -33, 32, -38, -13, -35, 25, -33, -18, 3, 11, 32, -20, 21, 6, 18, 19, -27, -48, -8, -36, -2, 30, 0, 11, 24, -20, 10, -43, 3, 10, -4, 10, 69, -9, 18, -8, -31, 2, -8, 0, 2, 10, 7, 19, 26, -24, -20, -3, 36, -10, 30, 43, 44, 42, 15, 42, 27, 16, -52, -59, -61, -2, -36, -1, -19, -43, -4, 4, -62, -30, -22, -68, -14, -75, -11, -78, -66, -50, -54, -10, -80, -15, -2, -46, -2, 4, -61, -18, -79, -29, -17, 1, -59, -55, 18, -15, -40, -13, -9, -36, -9, -33, 7, 7, -74, -32, -15, -13, -7, -10, 15, -49, 21, -39, -14, 2, -4, -15, 37, 49, -36, -38, -12, 53, -17, 43, -14, -7, -26, -27, 2, -30, 47, 25, 50, 0, 47, -17, -27, 40, -27, 7, -2, 24, -19, 40, 67, 76, -22, 46, -10, 39, 2, 18, 34, 11, 49, 10, 50, 49, 60, -3, -32, 29, -6, -28, -36, -35, 41, -12, 38, 14, -37, 46, -39, 7, -7, -1, 17, 19, -23, -37, 20, 3, 35, 43, -34, 36, 45, 17, 40, -26, 39, 61, 51, 5, 14, 69, 51, 49, 21, 73, 2, 15, 41, 30, -5, 41, 47, 0, -8, 5, 11, 41, -33, -13, 28, -4, 34, -5, 44, 27, 10, -6, -8, 7, 9, -11, -20, 9, -7, -30, 11, -22, 50, 26, 16, -7, 4, 13, 27, -16, 28, -17, -28, 6, 14, -4, -25, 6, 44, 25, 0, 11, -10, 19, 44, 51, -5, -34, -29, -27, 30, 0, 26, -6, 4, 54, 18, -1, -19, -60, -42, -57, 35, -53, 27, -8, -44, -29, -15, 34, -35, -23, -20, 8, 40, 19, 6, -38, -17, 10, 26, -35, 10, 14, -39, -4, -25, 17, 34, 9, 29, -27, -56, 20, -26, -5, -22, -32, -67, -39, -49, -33, -21, 3, 40, -39, 17, -4, 17, 21, 27, 15, -27, -5, -3, -44, 5, 11, -11, 3, 1, 0, -39, -20, -41, -17, -29, -7, 32, -11, 25, -3, 12, 1, -3, 48, 9, -28, -47, 21, -7, -56, -33, -11, 15, -10, -56, 10, 16, 14, -51, 6, 23, 3, -42, -19, -11, 11, 16, 22, 13, -39, 40, 22, -25, 31, -11, -31, -37, -6, -12, 23, -25, -5, 9, 9, -17, 6, 20, 39, -14, -46, -21, 33, 18, -19, -6, 4, -23, 31, -34, -15, -16, -35, -14, -27, -27, 0, -17, -4, -44, -44, -64, -16, -23, -59, -41, -31, -1, -32, -2, -44, -28, -40, -55, -9, -37, 11, -52, -51, 5, -22, 
  -10, -22, -20, -2, 37, 14, 0, -26, 18, 2, -35, -11, 20, -4, -7, 8, -56, -8, 10, 29, -7, -47, -18, -50, -2, -33, -37, 22, -26, 60, 55, 17, 62, 0, 1, 15, 9, -30, -13, 23, 43, 1, 11, 26, -19, -32, 46, -6, 27, -17, 6, -21, 9, -9, -8, -17, 22, -1, 22, -42, -23, 36, -22, 22, -23, 33, -17, -48, -14, 62, -3, 27, -39, 10, -5, 12, -10, 18, 3, 22, 14, 42, -55, -8, 3, 22, 11, -13, 88, 9, 5, 60, 62, 29, 18, -10, 10, -17, 33, -18, -2, -1, -23, -7, 48, 46, 7, 10, -29, -52, 8, 8, 16, -45, -37, 24, 6, 49, -26, -5, 37, 0, -23, -3, 62, 34, 11, -33, 32, 33, -1, 50, 27, 36, -15, -1, 31, -15, 52, -50, 10, -2, 35, -3, -4, 38, 27, -5, -11, 9, -19, -11, 20, 3, -10, -22, 39, 64, -19, -14, -27, 20, -19, 44, 40, 4, 54, -37, -4, 4, 25, -5, 20, 36, 29, -1, 18, 31, -44, 38, 15, -31, -39, 34, 39, -39, -38, 32, -22, 19, 21, -53, -17, 57, 49, 24, 18, -9, -27, -4, -11, 34, -39, -41, 5, -4, -58, -12, -33, -21, -30, 43, 26, 9, -1, -41, 17, -21, 23, 16, -31, -21, 24, -29, 16, -1, 20, -19, -39, 10, -55, -42, 48, -39, 7, -10, 35, 25, 38, 22, -38, -46, -24, -54, -30, -39, -39, -41, -15, -9, -23, -7, -57, -21, -22, -2, 3, -10, -48, 37, 38, -24, -47, 1, 5, 28, 34, 5, -29, 5, 27, 70, 13, 23, -11, -30, -44, -22, -8, -4, 6, -6, -19, 58, -24, 16, 14, -28, 42, 41, -19, -54, 2, -20, -4, 8, -24, 26, -36, -7, 51, 5, 24, 33, 17, 30, 13, 19, -52, -11, 60, 24, 74, 27, 83, 48, 12, -10, -17, 9, 40, -1, 22, -62, -20, -71, -22, -34, -70, -62, 41, 23, -28, 25, 55, 35, 30, 12, 38, 45, 36, 29, -10, 35, 7, -5, 39, 0, 38, -11, -9, 0, -4, 34, -23, 5, 79, -18, -24, 6, 19, 9, 13, -16, 0, 9, 56, 17, 32, -17, 30, 13, 53, -15, 41, 31, 54, 10, 5, 53, 38, -35, -1, 14, 23, 26, 6, 9, -32, 11, -60, -22, -20, 15, -11, -51, 2, -6, 36, 9, -22, 10, 23, 45, 21, -20, 33, -11, -40, 18, 15, 14, 24, -49, -42, -32, 46, -20, 6, 74, 2, -21, -8, -23, -27, -39, -62, 6, 55, -15, -3, 24, -2, -51, 37, -28, 29, -39, 12, -39, -32, 22, -60, -9, 3, -6, 15, -3, -42, -7, 4, -61, -46, -52, -22, -13, 4, 21, -6, -62, -21, 10, 4, -14, -8, 27, -52, 39, 50, 45, 34, -41, 8, -52, -3, -17, 46, 15, -46, -15, -22, -53, 32, -27, -43, -14, -15, -34, 10, 19, 48, 25, -33, -46, 30, 50, 20, 1, -43, 11, 28, 30, 48, 44, -24, -4, 0, -30, -13, -20, -36, 1, 31, 14, -34, 42, -19, 5, 15, -10, 17, 13, -2, -15, 18, -46, 18, 1, -19, 16, 17, 14, 36, -1, 11, 15, 9, -11, -33, -46, -19, 53, 55, 36, 21, 62, 12, -24, 60, 9, 74, -12, -3, 24, 29, 9, 18, 18, -26, 36, 43, 28, 43, -44, -55, -58, -23, -26, -30, 1, -38, -52, -21, 11, 1, 63, 23, 6, -2, -39, -26, 53, 23, 24, -56, 10, -12, -34, 33, 55, -45, -63, 1, 64, -1, 4, -25, 7, -44, 31, 45, 11, 8, 26, -28, -19, 54, 41, 42, -9, -5, -40, 46, 29, -31, -37, 33, -7, 16, 65, 0, -14, -61, 10, 41, 11, 30, 30, 16, 23, 45, 6, -34, 8, -13, -5, -30, -52, 24, -26, -23, 17, 1, 21, -37, -32, 14, 16, -4, 9, -6, -23, 7, 9, 20, 28, 1, 3, -6, -26, -20, 4, 37, 19, 51, -4, -40, -8, 36, -13, 4, -48, 26, 7, -9, -25, -18, 8, 18, -16, 41, 21, 10, -3, -13, 38, 22, 30, 8, -12, 0, 44, 56, -21, 28, 41, 2, -8, 10, 5, 34, 28, -20, -31, -43, 19, 26, 7, 31, -10, 18, -33, 25, 35, -41, 22, -24, 9, 55, 36, 23, 40, -23, 9, -30, 4, -7, -8, 57, -16, -23, -21, -5, 14, -28, 10, 38, 26, 42, 3, 7, 56, 52, -22, 32, -22, 23, 25, 1, -34, 14, -21, -1, 7, 55, -17, 10, 5, 23, 32, -27, 31, 14, 46, 11, -31, 19, 12, -18, -27, 14, 12, -63, -3, -27, 22, 17, -10, 16, -7, 6, 37, 25, 
  11, 21, 30, 34, 31, -23, -14, 52, 42, 12, 7, 61, 6, 54, -6, 20, -2, 21, 70, 17, 66, 9, -32, 46, -16, -45, -47, 1, 19, -18, 3, -21, -3, 26, 4, 38, 13, -52, 9, -27, -34, -17, 36, -28, -2, -55, 18, 52, -38, 14, -49, -47, 44, 5, -10, -25, 11, -66, -45, -57, -33, -72, -4, 11, -35, -16, -43, -25, -25, -34, 25, -37, -4, 0, -20, -38, -80, -48, 25, -49, -56, -74, -78, -37, -2, 30, -35, 26, 20, 14, 4, 38, -27, 2, 29, 13, -9, -28, 31, -40, 41, 10, -11, -78, -68, -69, -70, -4, -25, -87, -87, -60, -15, -20, -47, 2, 24, 40, -60, -28, -41, 11, -19, 18, -1, 19, 12, 22, 16, 22, 3, 9, -21, 26, -12, -15, 21, 7, -4, -39, -73, -29, -21, 38, 27, -5, 10, 10, 23, -18, 3, 23, -44, -36, -1, -14, 3, 22, -3, -35, -39, -46, -57, -23, 34, 35, -30, -11, 29, 9, -65, -38, 41, 32, 43, 25, -18, 0, -15, 33, 35, 32, 38, -14, -31, 17, 35, -10, 17, -36, 15, 28, 4, 42, 28, -39, 17, 64, 15, -25, 21, -8, 14, -25, 18, -10, 26, -5, 33, 5, -4, 8, 8, 23, 8, 26, -11, -14, 34, -51, 11, 13, 11, 1, -23, 5, 4, -33, -43, 18, 47, -18, 15, 22, 7, -16, 16, 16, 26, -52, 10, -36, -16, -31, -8, -14, 35, 13, 30, -20, 5, 40, -27, -3, 44, -8, -28, 11, -13, 63, 57, 27, -56, 23, 1, -15, -62, -10, -29, -13, 21, -27, 1, -73, -3, -14, -7, -30, -30, -43, -51, -52, -77, -39, -83, -12, -73, -88, -11, -38, -53, -25, -68, -44, -18, -53, -29, -8, -67, 33, 6, -19, 26, -17, 4, 11, -62, -8, -12, -20, 39, -19, 54, 42, -16, 74, 2, 39, 2, -30, -11, -32, 1, -40, -20, 9, -76, -9, 19, -15, -28, -5, -6, 36, -23, 37, 32, -4, -8, 30, 41, 50, 4, 41, -42, -19, -33, -52, -3, -8, 6, 20, 50, -32, -38, 43, 41, -30, 22, -57, -79, 23, -11, -29, 18, -25, 63, 4, 18, 23, -18, 27, -32, 12, 24, -21, 42, 7, -4, -20, -31, -36, -21, 27, 21, 31, -33, -22, -51, 12, 14, -12, 7, -26, 22, 26, 14, 71, 19, -31, 5, -25, -9, 23, -10, -3, 23, 18, -24, -14, -18, -7, 30, 48, -12, 17, -49, 51, -26, 28, 45, 35, 7, -30, 17, -9, -81, 0, 57, 62, -8, -76, -47, 8, -5, 35, -34, 2, -16, 11, -31, -33, -27, -5, -15, 56, 6, -61, -26, -22, -3, 43, 2, 1, -54, -16, -25, -26, 34, 6, -13, 15, -47, 0, 36, 0, -10, -54, -42, -10, 7, -8, 17, -33, -13, 13, 8, 4, -15, 36, -56, -48, -12, -21, 5, -4, -1, 50, 6, 15, -26, 33, 0, 1, 7, -42, 30, 22, -42, 50, 7, 4, 63, 26, 52, -25, 30, 52, 11, 46, 46, -21, 17, 49, 46, 73, 28, 32, 4, -1, 56, 2, -20, 6, -20, 31, 7, -13, -50, -43, 10, -9, 1, 0, 2, 31, 13, -10, 44, -56, 61, 8, -38, 62, -4, 20, -33, -21, -15, -14, -26, 38, 7, 34, -1, 8, -20, -64, 73, 6, -50, -38, -42, 20, -10, -50, -44, -87, -83, -15, 3, -14, 4, -29, -30, 50, 54, -52, -72, -46, 12, -5, -36, 27, -6, -127, -44, -27, -42, 23, -50, -25, -46, 14, -50, -42, -19, 53, 23, 36, 8, 0, 3, -12, 37, -20, -29, 23, 18, -32, -83, -9, -39, 13, -14, 2, -15, -14, 28, 42, 16, 6, 20, 23, -7, 17, 22, -1, 10, -24, -8, -33, 0, -12, -21, -13, 6, -22, -7, -67, -11, -47, -16, 25, -49, 23, 5, 26, 4, -2, -18, 10, -59, -21, -24, 33, 18, -42, 2, -45, -3, 10, -46, 11, 0, -2, -18, 35, 35, 10, -31, -18, 55, 22, -30, -4, -6, -12, 41, 1, -2, -30, -4, -21, 33, 27, -5, -25, -37, -36, 20, 2, 13, 35, -30, 5, 37, -9, 34, -44, 38, 33, 38, 8, -39, 5, -9, -29, -8, -25, 11, -15, 8, 28, -26, -26, -14, 52, -15, 21, 5, -1, 51, -35, 26, 24, 22, -16, 33, -43, -46, -42, -17, -6, 4, -34, -5, 3, 23, 1, 47, -15, 40, -13, -38, 26, 8, 52, -11, -42, 14, 20, -23, -22, -7, 36, -13, -18, -8, -17, 2, -7, 51, 9, -25, 44, 17, 8, -10, -27, -44, 23, -39, -13, 32, 26, -2, -40, 0, -8, 4, 54, -3, 
  -22, -31, 21, -46, 15, -18, -38, 0, 12, -46, -30, 1, -28, 0, -38, -15, 27, -32, -15, -6, -47, 59, 6, 63, -2, -20, 35, 7, -44, -52, -14, -35, -62, -48, 51, 10, 23, -48, -54, -30, -63, 32, -15, 37, 5, -34, 39, 6, -29, -12, -1, -3, 58, -15, 49, -22, -39, -19, 7, 47, -23, -26, -32, 22, 29, -33, 41, -5, 17, 30, 17, 6, 55, -2, -11, 32, 46, 8, -35, 5, 4, 13, 50, -5, 22, 14, 22, -3, -46, -56, -34, 27, 13, -32, -44, -46, 21, 14, 40, -30, -54, 18, 16, 16, -26, -11, -12, -13, 9, 46, -11, 19, -21, -7, -25, -54, 1, 23, -28, -69, 31, -27, -15, 10, 0, 25, -24, -39, 0, 2, -49, -35, -31, -31, -26, -24, 23, 57, -8, 17, 38, -22, 1, -17, 25, 2, 24, 44, 6, 2, 7, 25, 38, 32, 4, -25, 12, -31, 34, 14, 28, 2, 50, -52, -14, -52, -25, 54, -6, 36, 26, -43, 39, 28, -4, 26, -19, -19, 34, 32, 36, -3, -41, 21, 36, -23, -39, -40, -30, -6, -4, -6, -38, -46, -6, -24, -35, -39, 23, -35, 6, -53, -18, 35, 15, -12, -16, 10, 5, -15, 3, 0, 29, 44, -35, 21, 36, 47, 1, 41, -28, 50, 2, 34, -31, 26, -45, 0, 4, -14, 23, -30, -10, -49, -2, -29, -18, -10, 20, -32, 11, -6, 2, 7, -13, 22, 32, -3, 23, 8, 2, 63, 21, -51, -32, -23, 59, -35, 7, 23, -43, 36, 103, -68, -50, 21, -32, 7, -45, 13, -4, -67, -38, -12, -17, -16, -25, -27, 30, 25, 7, -12, 4, -5, 1, -11, 11, -3, -21, 25, 12, -25, 2, 5, -11, -18, -9, 44, -22, 17, -31, 27, 31, 5, -14, -41, -27, 13, 14, 13, -38, 0, -34, -27, -74, -14, -46, 13, 11, 16, 3, 6, 14, 55, 53, 18, 15, 29, 84, 21, 27, 61, 35, -10, -70, -41, 11, 16, 12, 2, -31, -62, -73, 10, -78, 18, 11, -27, -36, -28, -5, -44, -39, 57, -9, 23, 33, -57, 36, -9, -39, 16, -11, -53, -29, -59, 1, -34, -6, 59, -17, -3, -16, 10, 14, 35, 3, -4, -68, 10, 42, 12, -18, -12, 40, -4, -9, 27, 29, 21, -3, 36, -25, 11, 58, 40, 39, -25, 32, 5, 12, -29, -16, 4, 49, -46, 1, 38, 41, -23, 42, 56, -2, -45, -4, 24, -14, -4, -77, -49, 23, -65, 48, -17, -13, 18, 16, -3, 5, -25, 57, 9, 13, 9, -23, -16, 4, 24, -49, -52, -16, -12, 22, 20, 18, -10, 14, 11, -28, -40, 6, 56, 49, 22, 25, 41, 7, 13, 12, 5, 13, 11, -26, -5, 38, -8, 1, 39, -34, -28, 10, 51, -3, 25, 9, 41, -15, -47, -16, -25, 21, 18, 27, 27, 38, 34, 6, 27, 17, 77, 54, 64, -20, -15, 67, -5, -35, -4, 60, 31, 13, -16, -34, 34, 55, 27, 8, 50, 48, 31, 50, 2, -16, 18, -27, 33, 3, -10, 11, 18, 21, -15, -17, 15, 41, -3, 41, 18, 3, 39, 35, -51, 14, 20, -19, 37, -34, 38, 12, -3, 10, 13, -11, -67, -14, -57, 18, -2, -52, -25, -29, -44, -35, 3, -30, 11, -19, 29, -33, -18, 13, -7, -30, -3, 59, -14, 10, 37, 25, 22, -21, 52, 25, 50, -61, -61, -46, -43, -27, -9, 43, -60, -42, -15, 30, -20, 53, -28, -16, -49, 3, 44, -41, -74, -22, -21, -1, -15, 18, 8, -43, -49, -26, -50, -3, -51, -24, -72, -51, 36, 53, 63, 33, 43, 4, 12, -27, -20, -1, -23, -15, 15, 60, -13, -6, -13, 17, 30, 37, 16, -14, 8, -28, -11, 20, 50, 70, 39, 13, -45, 26, -11, -48, -9, 45, -26, -14, -72, -13, 23, 41, 21, 55, -8, -3, 4, -25, 7, 37, -45, -38, 24, -24, 6, 15, -33, -19, -50, -33, -45, -9, -14, -51, -52, 25, -22, 4, 8, 17, -6, 21, -27, -28, -46, 11, -5, -28, -4, -36, 0, 34, -21, 28, -23, 46, 67, 43, -30, 38, -28, -13, -31, -29, -24, 24, 5, 12, -3, -29, -12, 18, 8, -27, -41, 3, 22, 24, 45, 5, 27, 48, -17, -31, 34, 56, 51, 41, -11, 53, 12, -2, 56, 14, -45, -6, 30, -54, 9, -2, 5, 8, -12, -7, -5, 34, 11, 41, -13, 21, -6, 31, 35, 48, -24, -65, -10, 6, 4, 58, 59, -19, -40, -55, -9, -18, 14, 45, 71, 18, 50, -1, 38, 71, -9, 21, -18, -21, 61, 56, 30, -6, 20, -3, 
  4, 41, 17, -23, -7, 21, 54, 16, 50, 63, -12, 49, 35, 6, 26, 1, 4, -17, -18, 1, -31, -55, 17, -46, 0, 10, -31, -25, 16, 42, -23, 29, 51, -19, 9, 27, -31, 13, 4, -16, -38, -28, 13, 32, -1, -33, -38, 17, 9, 18, 13, 27, -33, 17, 22, -10, 38, -19, -37, 31, -34, 31, -23, 36, -5, 19, 6, -27, -26, -17, -41, 46, 1, -3, -13, 18, -29, -18, -15, -6, 29, -4, 1, -29, -2, 11, 34, 1, 20, 0, -53, -3, -44, -18, 16, -35, -26, -31, 45, -26, -21, 29, 29, -31, -10, 27, -41, -40, -18, 19, 39, 20, -50, -33, 13, 3, -3, -25, -7, 3, 25, -19, -2, -29, 13, 29, -38, -5, -24, 8, -19, 4, 29, 15, -14, 41, 29, 41, -18, -16, 20, -25, 12, 7, 7, 47, -28, 36, 2, 20, -40, 26, -20, -36, -16, -61, -54, -26, -23, 4, -54, -60, 19, -21, 2, -47, 25, 25, 30, -39, -32, 12, -1, -30, -7, 14, -33, 14, -25, -12, 9, -33, -16, -8, -14, 25, -27, -12, -15, 39, -19, -13, 48, 23, -1, 33, -26, -29, 30, -43, 4, -57, 0, 18, 20, -12, -36, 29, 11, 4, -15, -19, -31, 0, 24, 20, -23, 13, 10, -21, -29, 17, 16, -2, 17, 36, -43, -21, -29, -41, 30, -28, -22, -9, 1, 44, -11, 47, 9, 1, 50, -28, -17, -40, -34, -5, -32, 36, 0, -33, -44, -13, -41, 30, -17, 16, 36, -18, 32, -32, -27, 32, -27, -4, 48, -26, 62, 36, 44, -11, 49, 70, 78, 64, 38, 2, 4, 54, 39, 42, 12, 48, 52, 23, 24, 27, 6, 77, 53, 67, 51, 47, 1, 29, 7, 60, 2, 36, 47, 54, 21, -32, 45, 37, -33, 3, -32, 41, -27, -31, 22, -21, -28, 16, -34, 37, -13, -15, -32, 2, -20, -28, -60, -42, -26, -1, -34, -7, -44, -17, -17, -25, -51, -3, -15, -8, -18, -26, 37, 35, 10, -21, 20, -19, 47, -7, -10, 5, 7, -8, 10, -12, 4, -20, 29, 0, 33, 24, 51, 18, -6, -24, -1, -5, 50, 25, -3, 39, -30, 32, 42, 22, -22, -37, -33, -47, 21, -25, -18, 36, -30, -46, 22, -25, 5, -43, -29, 24, 50, 2, -21, 19, -1, 34, 8, -16, -14, -20, 12, 47, 14, -41, 38, 42, -25, -22, -31, 14, -46, -28, -4, -18, 17, 2, -15, -15, 4, -3, 21, 39, -3, -2, -8, 38, 20, -28, -3, 41, 0, 8, 1, 23, -22, 49, 42, -38, 3, -12, -42, 4, -20, 42, -36, -31, 1, 13, 39, 31, 10, 14, 4, 7, 14, 17, 8, -6, 48, 4, 25, -10, 58, 4, -31, 19, -11, 43, 49, -10, 41, 13, 46, -10, 46, 1, 12, 60, 65, -23, 49, -19, -41, 38, -5, -40, 12, 24, -21, -30, 51, -32, -16, 33, 10, 15, -22, 40, 40, -26, -36, -39, 11, 17, 50, 17, 17, -4, -22, 13, -3, 48, -34, -15, 38, -9, 17, -9, 28, 22, 3, 7, 43, 4, -24, -14, 15, -9, -40, -13, 13, 36, -6, -31, 5, 39, 39, 13, 36, -3, -4, 1, -27, -1, -44, 10, -8, 3, 22, -27, -16, -27, 50, -28, 51, 0, 15, 3, -16, 36, 15, -34, 51, 24, 23, -21, 22, 27, -24, -40, -2, -43, 26, -19, 13, 6, -5, 17, -15, -3, 1, 20, 21, -17, 27, 10, -28, -20, -21, 54, 59, 29, -37, -5, -10, 21, 14, -16, -34, 46, 33, 4, 10, -17, 10, 2, -2, 40, -19, 38, 5, 0, 54, -22, -33, 44, 26, -3, 21, -21, -1, -18, -22, 14, -3, -26, -6, 17, 39, 33, -6, 25, 25, -24, 13, 22, -28, 59, 37, -15, 26, -2, 14, 56, 46, -15, 33, 48, -32, 25, 47, 56, 48, -20, 24, -19, 28, 20, 56, -8, 16, -4, 43, 48, 16, 28, 23, 9, -4, 35, -44, -19, -14, 17, -28, 6, 50, 32, 37, -4, -28, -32, 32, -29, 9, 16, 30, -3, 4, -30, -14, 12, -29, 12, 20, 38, 48, 37, 45, -16, -22, -25, 1, -32, 2, 3, -18, -26, -41, 39, -34, -16, -13, 6, 4, -18, -8, -50, 22, -8, -36, 9, 32, 33, -38, -8, 36, 25, 42, 45, 33, 43, 34, -21, 23, 17, -34, -24, -31, -31, -15, 36, -11, 20, 35, 37, -14, 51, -14, 39, 44, -2, 7, 6, 36, 60, 48, -28, 29, -12, -25, -9, 15, 22, 7, -2, -9, -8, -28, 5, -39, -39, 30, -23, -39, 7, 33, -26, -23, -33, 19, 19, -37, 0, 25, 
};
const TfArray<2, int> tensor_dimension6 = { 2, { 20,783 } };
const TfArray<1, float> quant6_scale = { 1, { 0.0019646144937723875, } };
const TfArray<1, int> quant6_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant6 = { (TfLiteFloatArray*)&quant6_scale, (TfLiteIntArray*)&quant6_zero, 0 };
const TfArray<2, int> tensor_dimension7 = { 2, { 1,20 } };
const TfArray<1, float> quant7_scale = { 1, { 0.11625300347805023, } };
const TfArray<1, int> quant7_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant7 = { (TfLiteFloatArray*)&quant7_scale, (TfLiteIntArray*)&quant7_zero, 0 };
const TfArray<2, int> tensor_dimension8 = { 2, { 1,10 } };
const TfArray<1, float> quant8_scale = { 1, { 0.096285805106163025, } };
const TfArray<1, int> quant8_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant8 = { (TfLiteFloatArray*)&quant8_scale, (TfLiteIntArray*)&quant8_zero, 0 };
const TfArray<2, int> tensor_dimension9 = { 2, { 1,2 } };
const TfArray<1, float> quant9_scale = { 1, { 0.099870681762695312, } };
const TfArray<1, int> quant9_zero = { 1, { -3 } };
const TfLiteAffineQuantization quant9 = { (TfLiteFloatArray*)&quant9_scale, (TfLiteIntArray*)&quant9_zero, 0 };
const TfArray<2, int> tensor_dimension10 = { 2, { 1,2 } };
const TfArray<1, float> quant10_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant10_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant10 = { (TfLiteFloatArray*)&quant10_scale, (TfLiteIntArray*)&quant10_zero, 0 };
const TfLiteFullyConnectedParams opdata0 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs0 = { 3, { 0,6,5 } };
const TfArray<1, int> outputs0 = { 1, { 7 } };
const TfLiteFullyConnectedParams opdata1 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs1 = { 3, { 7,4,3 } };
const TfArray<1, int> outputs1 = { 1, { 8 } };
const TfLiteFullyConnectedParams opdata2 = { kTfLiteActNone, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs2 = { 3, { 8,2,1 } };
const TfArray<1, int> outputs2 = { 1, { 9 } };
const TfLiteSoftmaxParams opdata3 = { 1 };
const TfArray<1, int> inputs3 = { 1, { 9 } };
const TfArray<1, int> outputs3 = { 1, { 10 } };
const TensorInfo_t tensorData[] = {
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension0, 783, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant0))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data1, (TfLiteIntArray*)&tensor_dimension1, 8, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant1))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data2, (TfLiteIntArray*)&tensor_dimension2, 20, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant2))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data3, (TfLiteIntArray*)&tensor_dimension3, 40, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant3))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data4, (TfLiteIntArray*)&tensor_dimension4, 200, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant4))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data5, (TfLiteIntArray*)&tensor_dimension5, 80, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant5))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data6, (TfLiteIntArray*)&tensor_dimension6, 15660, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant6))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 784, (TfLiteIntArray*)&tensor_dimension7, 20, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant7))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension8, 10, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant8))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 16, (TfLiteIntArray*)&tensor_dimension9, 2, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant9))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension10, 2, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant10))}, },
};const NodeInfo_t nodeData[] = {
  { (TfLiteIntArray*)&inputs0, (TfLiteIntArray*)&outputs0, const_cast<void*>(static_cast<const void*>(&opdata0)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs1, (TfLiteIntArray*)&outputs1, const_cast<void*>(static_cast<const void*>(&opdata1)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs2, (TfLiteIntArray*)&outputs2, const_cast<void*>(static_cast<const void*>(&opdata2)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs3, (TfLiteIntArray*)&outputs3, const_cast<void*>(static_cast<const void*>(&opdata3)), OP_SOFTMAX, },
};

static void init_tflite_tensor(size_t i, TfLiteTensor *tensor) {
  tensor->type = tensorData[i].type;
  tensor->is_variable = 0;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  tensor->allocation_type = tensorData[i].allocation_type;
#else
  tensor->allocation_type = (tensor_arena <= tensorData[i].data && tensorData[i].data < tensor_arena + kTensorArenaSize) ? kTfLiteArenaRw : kTfLiteMmapRo;
#endif
  tensor->bytes = tensorData[i].bytes;
  tensor->dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  if(tensor->allocation_type == kTfLiteArenaRw){
    uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

    tensor->data.data =  start;
  }
  else {
      tensor->data.data = tensorData[i].data;
  }
#else
  tensor->data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
  tensor->quantization = tensorData[i].quantization;
  if (tensor->quantization.type == kTfLiteAffineQuantization) {
    TfLiteAffineQuantization const* quant = ((TfLiteAffineQuantization const*)(tensorData[i].quantization.params));
    tensor->params.scale = quant->scale->data[0];
    tensor->params.zero_point = quant->zero_point->data[0];
  }

}

static void init_tflite_eval_tensor(int i, TfLiteEvalTensor *tensor) {

  tensor->type = tensorData[i].type;

  tensor->dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  auto allocation_type = tensorData[i].allocation_type;
  if(allocation_type == kTfLiteArenaRw) {
    uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

    tensor->data.data =  start;
  }
  else {
    tensor->data.data = tensorData[i].data;
  }
#else
  tensor->data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
}

static void* overflow_buffers[EI_MAX_OVERFLOW_BUFFER_COUNT];
static size_t overflow_buffers_ix = 0;
static void * AllocatePersistentBufferImpl(struct TfLiteContext* ctx,
                                       size_t bytes) {
  void *ptr;
  uint32_t align_bytes = (bytes % 16) ? 16 - (bytes % 16) : 0;

  if (current_location - (bytes + align_bytes) < tensor_boundary) {
    if (overflow_buffers_ix > EI_MAX_OVERFLOW_BUFFER_COUNT - 1) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d, does not fit in tensor arena and reached EI_MAX_OVERFLOW_BUFFER_COUNT\n",
        (int)bytes);
      return NULL;
    }

    // OK, this will look super weird, but.... we have CMSIS-NN buffers which
    // we cannot calculate beforehand easily.
    ptr = ei_calloc(bytes, 1);
    if (ptr == NULL) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d\n", (int)bytes);
      return NULL;
    }
    overflow_buffers[overflow_buffers_ix++] = ptr;
    return ptr;
  }

  current_location -= bytes;

  // align to the left aligned boundary of 16 bytes
  current_location -= 15; // for alignment
  current_location += 16 - ((uintptr_t)(current_location) & 15);

  ptr = current_location;
  memset(ptr, 0, bytes);

  return ptr;
}
typedef struct {
  size_t bytes;
  void *ptr;
} scratch_buffer_t;
static scratch_buffer_t scratch_buffers[EI_MAX_SCRATCH_BUFFER_COUNT];
static size_t scratch_buffers_ix = 0;

static TfLiteStatus RequestScratchBufferInArenaImpl(struct TfLiteContext* ctx, size_t bytes,
                                                int* buffer_idx) {
  if (scratch_buffers_ix > EI_MAX_SCRATCH_BUFFER_COUNT - 1) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d, reached EI_MAX_SCRATCH_BUFFER_COUNT\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffer_t b;
  b.bytes = bytes;

  b.ptr = AllocatePersistentBufferImpl(ctx, b.bytes);
  if (!b.ptr) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffers[scratch_buffers_ix] = b;
  *buffer_idx = scratch_buffers_ix;

  scratch_buffers_ix++;

  return kTfLiteOk;
}

static void* GetScratchBufferImpl(struct TfLiteContext* ctx, int buffer_idx) {
  if (buffer_idx > (int)scratch_buffers_ix) {
    return NULL;
  }
  return scratch_buffers[buffer_idx].ptr;
}

static const uint16_t TENSOR_IX_UNUSED = 0x7FFF;

static void ResetTensors() {
  for (size_t ix = 0; ix < MAX_TFL_TENSOR_COUNT; ix++) {
    tflTensors[ix].index = TENSOR_IX_UNUSED;
  }
  for (size_t ix = 0; ix < MAX_TFL_EVAL_COUNT; ix++) {
    tflEvalTensors[ix].index = TENSOR_IX_UNUSED;
  }
}

static TfLiteTensor* GetTensorImpl(const struct TfLiteContext* context,
                               int tensor_idx) {

  for (size_t ix = 0; ix < MAX_TFL_TENSOR_COUNT; ix++) {
    // already used? OK!
    if (tflTensors[ix].index == tensor_idx) {
      return &tflTensors[ix].tensor;
    }
    // passed all the ones we've used, so end of the list?
    if (tflTensors[ix].index == TENSOR_IX_UNUSED) {
      // init the tensor
      init_tflite_tensor(tensor_idx, &tflTensors[ix].tensor);
      tflTensors[ix].index = tensor_idx;
      return &tflTensors[ix].tensor;
    }
  }

  ei_printf("ERR: GetTensor called beyond MAX_TFL_TENSOR_COUNT (%d)\n", MAX_TFL_TENSOR_COUNT);
  return nullptr;
}

static TfLiteEvalTensor* GetEvalTensorImpl(const struct TfLiteContext* context,
                                       int tensor_idx) {

  for (size_t ix = 0; ix < MAX_TFL_EVAL_COUNT; ix++) {
    // already used? OK!
    if (tflEvalTensors[ix].index == tensor_idx) {
      return &tflEvalTensors[ix].tensor;
    }
    // passed all the ones we've used, so end of the list?
    if (tflEvalTensors[ix].index == TENSOR_IX_UNUSED) {
      // init the tensor
      init_tflite_eval_tensor(tensor_idx, &tflEvalTensors[ix].tensor);
      tflEvalTensors[ix].index = tensor_idx;
      return &tflEvalTensors[ix].tensor;
    }
  }

  ei_printf("ERR: GetTensor called beyond MAX_TFL_EVAL_COUNT (%d)\n", (int)MAX_TFL_EVAL_COUNT);
  return nullptr;
}

class EonMicroContext : public MicroContext {
 public:
  EonMicroContext(): MicroContext(nullptr, nullptr, nullptr) { }

  void* AllocatePersistentBuffer(size_t bytes) {
    return AllocatePersistentBufferImpl(nullptr, bytes);
  };
  TfLiteStatus RequestScratchBufferInArena(size_t bytes,
                                           int* buffer_index) {
  return RequestScratchBufferInArenaImpl(nullptr, bytes, buffer_index);
  }
  void* GetScratchBuffer(int buffer_index) {
    return GetScratchBufferImpl(nullptr, buffer_index);
  }

  TfLiteTensor* AllocateTempTfLiteTensor(int tensor_index) {
    return GetTensorImpl(nullptr, tensor_index);
  }
  void DeallocateTempTfLiteTensor(TfLiteTensor* tensor) {
    return;
  }
  bool IsAllTempTfLiteTensorDeallocated() {
    return true;
  }

  TfLiteEvalTensor* GetEvalTensor(int tensor_index) {
    return GetEvalTensorImpl(nullptr, tensor_index);
  }
};

} // namespace

TfLiteStatus tflite_learn_7_init( void*(*alloc_fnc)(size_t,size_t) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  tensor_arena = (uint8_t*) alloc_fnc(16, kTensorArenaSize);
  if (!tensor_arena) {
    ei_printf("ERR: failed to allocate tensor arena\n");
    return kTfLiteError;
  }
#else
  memset(tensor_arena, 0, kTensorArenaSize);
#endif
  tensor_boundary = tensor_arena;
  current_location = tensor_arena + kTensorArenaSize;

  EonMicroContext micro_context_;
  ctx.impl_ = static_cast<void*>(&micro_context_);
  ctx.AllocatePersistentBuffer = &AllocatePersistentBufferImpl;
  ctx.RequestScratchBufferInArena = &RequestScratchBufferInArenaImpl;
  ctx.GetScratchBuffer = &GetScratchBufferImpl;
  ctx.GetTensor = &GetTensorImpl;
  ctx.GetEvalTensor = &GetEvalTensorImpl;
  ctx.ReportError = &MicroContextReportOpError;
  ctx.tensors_size = 11;
  for (size_t i = 0; i < 11; ++i) {
    TfLiteTensor tensor;
    init_tflite_tensor(i, &tensor);
    if (tensor.allocation_type == kTfLiteArenaRw) {
      auto data_end_ptr = (uint8_t*)tensor.data.data + tensorData[i].bytes;
      if (data_end_ptr > tensor_boundary) {
        tensor_boundary = data_end_ptr;
      }
    }
  }
  if (tensor_boundary > current_location /* end of arena size */) {
    ei_printf("ERR: tensor arena is too small, does not fit model - even without scratch buffers\n");
    return kTfLiteError;
  }
  registrations[OP_FULLY_CONNECTED] = Register_FULLY_CONNECTED();
  registrations[OP_SOFTMAX] = Register_SOFTMAX();

  for (size_t i = 0; i < 4; ++i) {
    tflNodes[i].inputs = nodeData[i].inputs;
    tflNodes[i].outputs = nodeData[i].outputs;
    tflNodes[i].builtin_data = nodeData[i].builtin_data;
tflNodes[i].custom_initial_data = nullptr;
      tflNodes[i].custom_initial_data_size = 0;
if (registrations[nodeData[i].used_op_index].init) {
      tflNodes[i].user_data = registrations[nodeData[i].used_op_index].init(&ctx, (const char*)tflNodes[i].builtin_data, 0);
    }
  }
  for (size_t i = 0; i < 4; ++i) {
    if (registrations[nodeData[i].used_op_index].prepare) {
      ResetTensors();

      TfLiteStatus status = registrations[nodeData[i].used_op_index].prepare(&ctx, &tflNodes[i]);
      if (status != kTfLiteOk) {
        return status;
      }
    }
  }
  return kTfLiteOk;
}

static const int inTensorIndices[] = {
  0, 
};
TfLiteStatus tflite_learn_7_input(int index, TfLiteTensor *tensor) {
  init_tflite_tensor(inTensorIndices[index], tensor);
  return kTfLiteOk;
}

static const int outTensorIndices[] = {
  10, 
};
TfLiteStatus tflite_learn_7_output(int index, TfLiteTensor *tensor) {
  init_tflite_tensor(outTensorIndices[index], tensor);
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_7_invoke() {
  for (size_t i = 0; i < 4; ++i) {
    ResetTensors();

    TfLiteStatus status = registrations[nodeData[i].used_op_index].invoke(&ctx, &tflNodes[i]);

#if EI_CLASSIFIER_PRINT_STATE
    ei_printf("layer %lu\n", i);
    ei_printf("    inputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].inputs->size; ix++) {
      auto d = tensorData[tflNodes[i].inputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");

    ei_printf("    outputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].outputs->size; ix++) {
      auto d = tensorData[tflNodes[i].outputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");
#endif // EI_CLASSIFIER_PRINT_STATE

    if (status != kTfLiteOk) {
      return status;
    }
  }
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_7_reset( void (*free_fnc)(void* ptr) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  free_fnc(tensor_arena);
#endif

  // scratch buffers are allocated within the arena, so just reset the counter so memory can be reused
  scratch_buffers_ix = 0;

  // overflow buffers are on the heap, so free them first
  for (size_t ix = 0; ix < overflow_buffers_ix; ix++) {
    ei_free(overflow_buffers[ix]);
  }
  overflow_buffers_ix = 0;
  return kTfLiteOk;
}
